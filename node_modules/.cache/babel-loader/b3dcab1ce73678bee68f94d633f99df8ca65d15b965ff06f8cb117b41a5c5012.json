{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MvBanner from './MvBanner'; // MvBanner 컴포넌트를 임포트합니다.\nimport { mockMovies } from './Mockmv'; // 목업 데이터를 임포트합니다.\nimport netflixLogo from './netflix.png'; // 넷플릭스 로고 이미지\nimport disneyPlusLogo from './disneyplus.png'; // 디즈니 플러스 로고 이미지\nimport watchaLogo from './watcha.png'; // 왓챠 로고 이미지\nimport wavveLogo from './wavve.png'; // 웨이브 로고 이미지\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearchPage = () => {\n  _s();\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPlatform, setSelectedPlatform] = useState('All');\n\n  // 장르 버튼 데이터\n  const genres = ['All', 'Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Mystery', 'Romance', 'Sci-Fi', 'TV Movie', 'Thriller', 'War', 'Western'];\n\n  // 플랫폼 버튼 데이터 및 로고\n  const platforms = [{\n    name: 'All',\n    logo: null\n  }, {\n    name: 'Netflix',\n    logo: netflixLogo\n  }, {\n    name: 'Disney Plus',\n    logo: disneyPlusLogo\n  }, {\n    name: 'Watcha',\n    logo: watchaLogo\n  }, {\n    name: 'Wavve',\n    logo: wavveLogo\n  }];\n\n  // 장르 선택 핸들러\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n  };\n\n  // 플랫폼 선택 핸들러\n  const handlePlatformSelect = platform => {\n    setSelectedPlatform(platform);\n  };\n\n  // 필터링된 영화 목록 계산\n  const filteredMovies = mockMovies.filter(movie => {\n    return (selectedGenre === 'All' || movie.genre.includes(selectedGenre)) && (selectedPlatform === 'All' || movie.flatrate.includes(selectedPlatform));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gap: '10px',\n        marginBottom: '20px'\n      },\n      children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGenreSelect(genre),\n        style: {\n          padding: '10px',\n          cursor: 'pointer',\n          backgroundColor: selectedGenre === genre ? 'yellow' : 'lightgray'\n        },\n        children: genre\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gap: '10px',\n        marginBottom: '20px'\n      },\n      children: platforms.map(({\n        name,\n        logo\n      }) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformSelect(name),\n        style: {\n          padding: '10px',\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: selectedPlatform === name ? 'yellow' : 'lightgray'\n        },\n        children: [logo && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: name,\n          style: {\n            marginRight: '10px',\n            width: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this), name]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(MvBanner, {\n        title: movie.title,\n        poster: movie.poster_path,\n        flatrate: movie.flatrate\n      }, movie.movie_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieSearchPage, \"4ZBW9ZMdBsJJfTdpdep3DvQuhoE=\");\n_c = MovieSearchPage;\nexport default MovieSearchPage;\nvar _c;\n$RefreshReg$(_c, \"MovieSearchPage\");","map":{"version":3,"names":["React","useState","MvBanner","mockMovies","netflixLogo","disneyPlusLogo","watchaLogo","wavveLogo","jsxDEV","_jsxDEV","MovieSearchPage","_s","selectedGenre","setSelectedGenre","selectedPlatform","setSelectedPlatform","genres","platforms","name","logo","handleGenreSelect","genre","handlePlatformSelect","platform","filteredMovies","filter","movie","includes","flatrate","children","style","display","gridTemplateColumns","gap","marginBottom","map","onClick","padding","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","src","alt","marginRight","width","title","poster","poster_path","movie_id","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MvBanner from './MvBanner'; // MvBanner 컴포넌트를 임포트합니다.\nimport { mockMovies } from './Mockmv'; // 목업 데이터를 임포트합니다.\nimport netflixLogo from './netflix.png'; // 넷플릭스 로고 이미지\nimport disneyPlusLogo from './disneyplus.png'; // 디즈니 플러스 로고 이미지\nimport watchaLogo from './watcha.png'; // 왓챠 로고 이미지\nimport wavveLogo from './wavve.png'; // 웨이브 로고 이미지\n\nconst MovieSearchPage = () => {\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPlatform, setSelectedPlatform] = useState('All');\n\n  // 장르 버튼 데이터\n  const genres = [\n    'All', 'Action', 'Adventure', 'Animation', 'Comedy', \n    'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', \n    'History', 'Horror', 'Music', 'Mystery', 'Romance', \n    'Sci-Fi', 'TV Movie', 'Thriller', 'War', 'Western'\n  ];\n\n  // 플랫폼 버튼 데이터 및 로고\n  const platforms = [\n    { name: 'All', logo: null },\n    { name: 'Netflix', logo: netflixLogo },\n    { name: 'Disney Plus', logo: disneyPlusLogo },\n    { name: 'Watcha', logo: watchaLogo },\n    { name: 'Wavve', logo: wavveLogo }\n  ];\n\n  // 장르 선택 핸들러\n  const handleGenreSelect = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  // 플랫폼 선택 핸들러\n  const handlePlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n  };\n\n  // 필터링된 영화 목록 계산\n  const filteredMovies = mockMovies.filter(movie => {\n    return (selectedGenre === 'All' || movie.genre.includes(selectedGenre)) &&\n           (selectedPlatform === 'All' || movie.flatrate.includes(selectedPlatform));\n  });\n\n  return (\n    <div>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '10px', marginBottom: '20px' }}>\n        {genres.map(genre => (\n          <button key={genre} onClick={() => handleGenreSelect(genre)} style={{ padding: '10px', cursor: 'pointer', backgroundColor: selectedGenre === genre ? 'yellow' : 'lightgray' }}>\n            {genre}\n          </button>\n        ))}\n      </div>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '10px', marginBottom: '20px' }}>\n        {platforms.map(({ name, logo }) => (\n          <button key={name} onClick={() => handlePlatformSelect(name)} style={{ padding: '10px', display: 'flex', alignItems: 'center', backgroundColor: selectedPlatform === name ? 'yellow' : 'lightgray' }}>\n            {logo && <img src={logo} alt={name} style={{ marginRight: '10px', width: '20px' }} />}\n            {name}\n          </button>\n        ))}\n      </div>\n      <div>\n        {filteredMovies.map(movie => (\n          <MvBanner key={movie.movie_id} title={movie.title} poster={movie.poster_path} flatrate={movie.flatrate} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}