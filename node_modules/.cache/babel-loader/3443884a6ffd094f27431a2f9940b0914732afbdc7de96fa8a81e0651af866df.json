{"ast":null,"code":"import React,{useState}from'react';import{Link}from'react-router-dom';import MvBanner from'./MvBanner';import'../css/MvchoPage.css';import logoImage from'../logo.png';import{mockMovies}from'./Mockmv';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MvchoPage(){const genreMapping={'장르 전체':'All','액션':'Action','모험':'Adventure','애니메이션':'Animation','코미디':'Comedy','범죄':'Crime','다큐멘터리':'Documentary','드라마':'Drama','가족':'Family','판타지':'Fantasy','역사':'History','공포':'Horror','음악':'Music','미스터리':'Mystery','로맨스':'Romance','SF':'Sci-Fi','TV 영화':'TV Movie','스릴러':'Thriller','전쟁':'War','서부':'Western'};const genres=Object.keys(genreMapping);const[selectedGenre,setSelectedGenre]=useState('장르 전체');const filteredMovies=selectedGenre==='장르 전체'?mockMovies:mockMovies.filter(movie=>movie.genre.split(', ').includes(genreMapping[selectedGenre]));const banners=filteredMovies.map(movie=>/*#__PURE__*/_jsx(MvBanner,{// 고유 ID 사용\ntitle:movie.title,poster:movie.poster_path,flatrate:movie.flatrate instanceof Array?movie.flatrate:[movie.flatrate]// 항상 배열로 전달\n,rating:Math.round(movie.vote_average/2)},movie.movie_id));return/*#__PURE__*/_jsxs(\"div\",{className:\"MvchoPage\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mainText\",children:\"\\uC7AC\\uBBF8\\uC788\\uAC8C \\uBD24\\uAC70\\uB098 \\uB208\\uAE38\\uC774 \\uAC00\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subText\",children:\"\\uCC1C\\uD55C \\uC601\\uD654\\uB4E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C MOVIELY\\uAC00 \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB4E4\\uC744 \\uCD94\\uCC9C\\uD574 \\uB4DC\\uB824\\uC694.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stickyTop\",children:[/*#__PURE__*/_jsx(Link,{to:\"/recommendations\",children:/*#__PURE__*/_jsx(\"button\",{className:\"recommendButton\",children:\"\\uC601\\uD654 \\uCD94\\uCC9C \\uBC1B\\uAE30 >\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"genreButtons\",children:genres.map(genre=>/*#__PURE__*/_jsx(\"button\",{className:\"genreButton\",onClick:()=>setSelectedGenre(genre),children:genre},genre))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bannerGrid\",children:banners.length>0?banners:/*#__PURE__*/_jsx(\"div\",{className:\"noMovies\",children:\"\\uC120\\uD0DD\\uD558\\uC2E0 \\uC7A5\\uB974\\uC758 \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]});}export default MvchoPage;","map":{"version":3,"names":["React","useState","Link","MvBanner","logoImage","mockMovies","jsx","_jsx","jsxs","_jsxs","MvchoPage","genreMapping","genres","Object","keys","selectedGenre","setSelectedGenre","filteredMovies","filter","movie","genre","split","includes","banners","map","title","poster","poster_path","flatrate","Array","rating","Math","round","vote_average","movie_id","className","children","src","alt","to","onClick","length"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { mockMovies } from './Mockmv';\n\nfunction MvchoPage() {\n  const genreMapping = {\n    '장르 전체': 'All',\n    '액션': 'Action',\n    '모험': 'Adventure',\n    '애니메이션': 'Animation',\n    '코미디': 'Comedy',\n    '범죄': 'Crime',\n    '다큐멘터리': 'Documentary',\n    '드라마': 'Drama',\n    '가족': 'Family',\n    '판타지': 'Fantasy',\n    '역사': 'History',\n    '공포': 'Horror',\n    '음악': 'Music',\n    '미스터리': 'Mystery',\n    '로맨스': 'Romance',\n    'SF': 'Sci-Fi',\n    'TV 영화': 'TV Movie',\n    '스릴러': 'Thriller',\n    '전쟁': 'War',\n    '서부': 'Western'\n  };\n  \n  const genres = Object.keys(genreMapping);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n\n  const filteredMovies = selectedGenre === '장르 전체' ? mockMovies : mockMovies.filter(movie =>\n    movie.genre.split(', ').includes(genreMapping[selectedGenre])\n  );\n\n  const banners = filteredMovies.map((movie) => (\n    <MvBanner\n      key={movie.movie_id}  // 고유 ID 사용\n      title={movie.title}\n      poster={movie.poster_path}\n      flatrate={movie.flatrate instanceof Array ? movie.flatrate : [movie.flatrate]}  // 항상 배열로 전달\n      rating={Math.round(movie.vote_average / 2)}\n    />\n  ));\n\n  return (\n    <div className=\"MvchoPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\"/>\n      <div className=\"mainText\">재미있게 봤거나 눈길이 가는 영화들을 평가해주세요.</div>\n      <div className=\"subText\">찜한 영화들을 바탕으로 MOVIELY가 취향저격 영화들을 추천해 드려요.</div>\n      <div className=\"stickyTop\">\n        <Link to=\"/recommendations\">\n          <button className=\"recommendButton\">영화 추천 받기 &gt;</button>\n        </Link>\n        <div className=\"genreButtons\">\n          {genres.map((genre) => (\n            <button key={genre} className=\"genreButton\" onClick={() => setSelectedGenre(genre)}>{genre}</button>\n          ))}\n        </div>\n      </div>\n      <div className=\"bannerGrid\">\n        {banners.length > 0 ? banners : <div className=\"noMovies\">선택하신 장르의 영화가 없습니다.</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default MvchoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}