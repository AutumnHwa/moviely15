{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/Cal.js\";\n// Cal.js\nimport React from \"react\";\nimport Calendar from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css';\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Cal extends React.Component {\n  constructor(props) {\n    super(props);\n    // 다음 주로 이동하는 버튼의 이벤트 핸들러\n    this.handleClickNextButton = () => {\n      const calendarInstance = this.calendarRef.current.getInstance();\n      calendarInstance.next();\n    };\n    // 주 단위로 보기 변경하는 버튼의 이벤트 핸들러\n    this.weekChangeButton = () => {\n      const calendarInstance = this.calendarRef.current.getInstance();\n      calendarInstance.changeView('week', true);\n    };\n    // 날짜 이름 클릭 이벤트 핸들러\n    this.handleClickDayname = ev => {\n      console.group('onClickDayname');\n      console.log(ev.date);\n      console.groupEnd();\n    };\n    // 스케줄 생성 전 이벤트 핸들러\n    this.beforeCreateSchedule = ev => {\n      console.group('onbeforeCreateSchedule');\n      console.log(ev);\n      console.groupEnd();\n    };\n    this.calendarRef = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    const selectedView = 'month'; // 기본 보기 설정\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.weekChangeButton,\n        children: \"\\uC8FC \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        ref: this.calendarRef,\n        onClickDayname: this.handleClickDayname,\n        onBeforeCreateSchedule: this.beforeCreateSchedule,\n        height: \"900px\",\n        calendars: [\n          // 여기에 캘린더 설정을 추가할 수 있습니다.\n        ],\n        disableDblClick: true,\n        disableClick: false,\n        isReadOnly: false // 읽기 전용 설정\n        ,\n        schedules: [\n          // 여기에 스케줄 설정을 추가할 수 있습니다.\n        ],\n        scheduleView: true // 스케줄 보기 활성화\n        ,\n        taskView: true // 태스크 보기 활성화\n        ,\n        template: {\n          // 여기에 템플릿 설정을 추가할 수 있습니다.\n        },\n        theme: \"\" // 테마 설정\n        ,\n        timezones: [\n          // 여기에 타임존 설정을 추가할 수 있습니다.\n        ],\n        useDetailPopup: true,\n        useCreationPopup: true,\n        view: selectedView // 기본 보기 설정\n        ,\n        week: {\n          daynames: ['일', '월', '화', '수', '목', '금', '토'],\n          showTimezoneCollapseButton: true,\n          timezonesCollapsed: true\n        },\n        month: {\n          daynames: ['일', '월', '화', '수', '목', '금', '토']\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClickNextButton,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Cal;","map":{"version":3,"names":["React","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","Cal","Component","constructor","props","handleClickNextButton","calendarInstance","calendarRef","current","getInstance","next","weekChangeButton","changeView","handleClickDayname","ev","console","group","log","date","groupEnd","beforeCreateSchedule","createRef","render","selectedView","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClickDayname","onBeforeCreateSchedule","height","calendars","disableDblClick","disableClick","isReadOnly","schedules","scheduleView","taskView","template","theme","timezones","useDetailPopup","useCreationPopup","view","week","daynames","showTimezoneCollapseButton","timezonesCollapsed","month"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/Cal.js"],"sourcesContent":["// Cal.js\nimport React from \"react\";\nimport Calendar from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css';\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\n\nclass Cal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.calendarRef = React.createRef();\n    }\n\n    // 다음 주로 이동하는 버튼의 이벤트 핸들러\n    handleClickNextButton = () => {\n        const calendarInstance = this.calendarRef.current.getInstance();\n        calendarInstance.next();\n    };\n\n    // 주 단위로 보기 변경하는 버튼의 이벤트 핸들러\n    weekChangeButton = () => {\n        const calendarInstance = this.calendarRef.current.getInstance();\n        calendarInstance.changeView('week', true);\n    }\n\n    // 날짜 이름 클릭 이벤트 핸들러\n    handleClickDayname = (ev) => {\n        console.group('onClickDayname');\n        console.log(ev.date);\n        console.groupEnd();\n    };\n\n    // 스케줄 생성 전 이벤트 핸들러\n    beforeCreateSchedule = (ev) => {\n        console.group('onbeforeCreateSchedule');\n        console.log(ev);\n        console.groupEnd();\n    }\n\n    render() {\n        const selectedView = 'month'; // 기본 보기 설정\n        \n        return (\n            <>\n                <button onClick={this.weekChangeButton}>주 보기</button>\n                <Calendar\n                    ref={this.calendarRef}\n                    onClickDayname={this.handleClickDayname}\n                    onBeforeCreateSchedule={this.beforeCreateSchedule}\n                    height=\"900px\"\n                    calendars={[\n                        // 여기에 캘린더 설정을 추가할 수 있습니다.\n                    ]}\n                    disableDblClick={true}\n                    disableClick={false}\n                    isReadOnly={false} // 읽기 전용 설정\n                    schedules={[\n                        // 여기에 스케줄 설정을 추가할 수 있습니다.\n                    ]}\n                    scheduleView // 스케줄 보기 활성화\n                    taskView // 태스크 보기 활성화\n                    template={{\n                        // 여기에 템플릿 설정을 추가할 수 있습니다.\n                    }}\n                    theme='' // 테마 설정\n                    timezones={[\n                        // 여기에 타임존 설정을 추가할 수 있습니다.\n                    ]}\n                    useDetailPopup\n                    useCreationPopup\n                    view={selectedView} // 기본 보기 설정\n                    week={{\n                        daynames: ['일', '월', '화', '수', '목', '금', '토'],\n                        showTimezoneCollapseButton: true,\n                        timezonesCollapsed: true\n                    }}\n                    month={{\n                        daynames: ['일', '월', '화', '수', '목', '금', '토']\n                    }}\n                />\n                <button onClick={this.handleClickNextButton}>다음</button>\n            </>\n        );\n    }\n}\n\nexport default Cal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}