{"ast":null,"code":"import React from'react';import{useNavigate,Link}from'react-router-dom';import{GoogleOAuthProvider,GoogleLogin}from'@react-oauth/google';import'../css/LogSignPage.css';import logoImage from'../logo.png';import{useAuth}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CLIENT_ID='13094654813-nqglekemv1iff66rsq4luqftbfgv51hi.apps.googleusercontent.com';function LogSignPage(){const navigate=useNavigate();const{login}=useAuth();const handleGoogleSuccess=async credentialResponse=>{const{credential}=credentialResponse;try{const res=await fetch('https://moviely.duckdns.org/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token:credential})});const data=await res.json();if(data.token){login(data.token,data.user);if(data.isNewUser){navigate('/add');}else{navigate('/movie-select');}}else{alert('로그인에 실패했습니다.');}}catch(error){console.error('Backend redirection failed:',error);alert('백엔드 처리에 실패했습니다.');}};const handleGoogleFailure=error=>{console.error('Google Login Failed:',error);alert('Google 로그인에 실패했습니다.');};return/*#__PURE__*/_jsxs(\"div\",{className:\"logSignPage\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"logSign-logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"logSignBox\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC18C\\uC15C \\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\\uC73C\\uB85C\",/*#__PURE__*/_jsx(\"br\",{}),\"MOVIELY\\uC758 \\uBAA8\\uB4E0 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC774\\uC6A9\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]}),/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:handleGoogleSuccess,onError:handleGoogleFailure})]})]});}function App(){return/*#__PURE__*/_jsx(GoogleOAuthProvider,{clientId:CLIENT_ID,children:/*#__PURE__*/_jsx(LogSignPage,{})});}export default App;","map":{"version":3,"names":["React","useNavigate","Link","GoogleOAuthProvider","GoogleLogin","logoImage","useAuth","jsx","_jsx","jsxs","_jsxs","CLIENT_ID","LogSignPage","navigate","login","handleGoogleSuccess","credentialResponse","credential","res","fetch","method","headers","body","JSON","stringify","token","data","json","user","isNewUser","alert","error","console","handleGoogleFailure","className","children","to","src","alt","onSuccess","onError","App","clientId"],"sources":["/Users/autumn/moviely 오후 2.30.27/src/pages/LogSignPage.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport '../css/LogSignPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext';\n\nconst CLIENT_ID = '13094654813-nqglekemv1iff66rsq4luqftbfgv51hi.apps.googleusercontent.com';\n\nfunction LogSignPage() {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    const { credential } = credentialResponse;\n\n    try {\n      const res = await fetch('https://moviely.duckdns.org/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token: credential }),\n      });\n      const data = await res.json();\n\n      if (data.token) {\n        login(data.token, data.user);\n        if (data.isNewUser) {\n          navigate('/add');\n        } else {\n          navigate('/movie-select');\n        }\n      } else {\n        alert('로그인에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Backend redirection failed:', error);\n      alert('백엔드 처리에 실패했습니다.');\n    }\n  };\n\n  const handleGoogleFailure = (error) => {\n    console.error('Google Login Failed:', error);\n    alert('Google 로그인에 실패했습니다.');\n  };\n\n  return (\n    <div className=\"logSignPage\">\n      <Link to=\"/\" className=\"logSign-logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"logSignBox\">\n        <h2>로그인 및 회원가입</h2>\n        <p>소셜 로그인 및 회원가입으로<br />MOVIELY의 모든 서비스를 이용하실 수 있습니다.</p>\n        <GoogleLogin\n          onSuccess={handleGoogleSuccess}\n          onError={handleGoogleFailure}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <GoogleOAuthProvider clientId={CLIENT_ID}>\n      <LogSignPage />\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,IAAI,KAAQ,kBAAkB,CACpD,OAASC,mBAAmB,CAAEC,WAAW,KAAQ,qBAAqB,CACtE,MAAO,wBAAwB,CAC/B,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,SAAS,CAAG,yEAAyE,CAE3F,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEa,KAAM,CAAC,CAAGR,OAAO,CAAC,CAAC,CAE3B,KAAM,CAAAS,mBAAmB,CAAG,KAAO,CAAAC,kBAAkB,EAAK,CACxD,KAAM,CAAEC,UAAW,CAAC,CAAGD,kBAAkB,CAEzC,GAAI,CACF,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,uCAAuC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAER,UAAW,CAAC,CAC5C,CAAC,CAAC,CACF,KAAM,CAAAS,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAE7B,GAAID,IAAI,CAACD,KAAK,CAAE,CACdX,KAAK,CAACY,IAAI,CAACD,KAAK,CAAEC,IAAI,CAACE,IAAI,CAAC,CAC5B,GAAIF,IAAI,CAACG,SAAS,CAAE,CAClBhB,QAAQ,CAAC,MAAM,CAAC,CAClB,CAAC,IAAM,CACLA,QAAQ,CAAC,eAAe,CAAC,CAC3B,CACF,CAAC,IAAM,CACLiB,KAAK,CAAC,cAAc,CAAC,CACvB,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDD,KAAK,CAAC,iBAAiB,CAAC,CAC1B,CACF,CAAC,CAED,KAAM,CAAAG,mBAAmB,CAAIF,KAAK,EAAK,CACrCC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CD,KAAK,CAAC,qBAAqB,CAAC,CAC9B,CAAC,CAED,mBACEpB,KAAA,QAAKwB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3B,IAAA,CAACN,IAAI,EAACkC,EAAE,CAAC,GAAG,CAACF,SAAS,CAAC,cAAc,CAAAC,QAAA,cACnC3B,IAAA,QAAK6B,GAAG,CAAEhC,SAAU,CAACiC,GAAG,CAAC,MAAM,CAAE,CAAC,CAC9B,CAAC,cACP5B,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB3B,IAAA,OAAA2B,QAAA,CAAI,oDAAU,CAAI,CAAC,cACnBzB,KAAA,MAAAyB,QAAA,EAAG,6EAAe,cAAA3B,IAAA,QAAK,CAAC,gHAA6B,EAAG,CAAC,cACzDA,IAAA,CAACJ,WAAW,EACVmC,SAAS,CAAExB,mBAAoB,CAC/ByB,OAAO,CAAEP,mBAAoB,CAC9B,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAEA,QAAS,CAAAQ,GAAGA,CAAA,CAAG,CACb,mBACEjC,IAAA,CAACL,mBAAmB,EAACuC,QAAQ,CAAE/B,SAAU,CAAAwB,QAAA,cACvC3B,IAAA,CAACI,WAAW,GAAE,CAAC,CACI,CAAC,CAE1B,CAEA,cAAe,CAAA6B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}