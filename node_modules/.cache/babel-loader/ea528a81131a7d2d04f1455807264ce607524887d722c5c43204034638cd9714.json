{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MycalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport Popcal from './Popcal'; // Popcal 컴포넌트 불러오기\nimport '../css/MycalPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MycalPage() {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // 날짜 클릭 이벤트 핸들러\n  const handleDateClick = () => {\n    setIsPopupOpen(true);\n  };\n\n  // 기록하기 버튼 클릭 핸들러\n  const handleRecordButtonClick = () => {\n    setIsPopupOpen(true);\n  };\n\n  // 팝업창을 닫는 함수\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycalPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"myPageLogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myPageTitle\",\n      children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navButtons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/my/watched\",\n        className: \"navButton\",\n        children: \"\\uC774\\uBBF8 \\uBCF8 \\uC601\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/my/wishlist\",\n        className: \"navButton\",\n        children: \"\\uBCF4\\uACE0\\uC2F6\\uC740 \\uC601\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/my/calendar\",\n        className: \"navButton active\",\n        children: \"MOVIELY \\uCE98\\uB9B0\\uB354\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecordButtonClick,\n      className: \"recordButton\",\n      children: \"\\uC601\\uD654 \\uAD00\\uB78C \\uAE30\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        dateClick: handleDateClick,\n        height: \"470px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popcal, {\n      isOpen: isPopupOpen,\n      onClose: handleClosePopup\n      // 필요하다면 다른 props 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(MycalPage, \"vFErrUU1qYQoaBmFpaEBY5pk8jE=\");\n_c = MycalPage;\nexport default MycalPage;\nvar _c;\n$RefreshReg$(_c, \"MycalPage\");","map":{"version":3,"names":["React","useState","Link","FullCalendar","dayGridPlugin","Popcal","logoImage","jsxDEV","_jsxDEV","MycalPage","_s","isPopupOpen","setIsPopupOpen","handleDateClick","handleRecordButtonClick","handleClosePopup","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","plugins","initialView","dateClick","height","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MycalPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport Popcal from './Popcal'; // Popcal 컴포넌트 불러오기\nimport '../css/MycalPage.css';\nimport logoImage from '../logo.png';\n\nfunction MycalPage() {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // 날짜 클릭 이벤트 핸들러\n  const handleDateClick = () => {\n    setIsPopupOpen(true);\n  };\n\n  // 기록하기 버튼 클릭 핸들러\n  const handleRecordButtonClick = () => {\n    setIsPopupOpen(true);\n  };\n\n  // 팝업창을 닫는 함수\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n\n  return (\n    <div className=\"mycalPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"myPageLogo\" />\n      <div className=\"myPageTitle\">마이페이지</div>\n      <div className=\"navButtons\">\n        <Link to=\"/my/watched\" className=\"navButton\">이미 본 영화</Link>\n        <Link to=\"/my/wishlist\" className=\"navButton\">보고싶은 영화</Link>\n        <Link to=\"/my/calendar\" className=\"navButton active\">MOVIELY 캘린더</Link>\n      </div>\n      <button onClick={handleRecordButtonClick} className=\"recordButton\">\n        영화 관람 기록하기\n      </button>\n      <div className=\"calendar-container\">\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          dateClick={handleDateClick}\n          height=\"470px\"\n        />\n      </div>\n      <Popcal\n        isOpen={isPopupOpen}\n        onClose={handleClosePopup}\n        // 필요하다면 다른 props 전달\n      />\n    </div>\n  );\n}\n\nexport default MycalPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}