{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { mockMovies } from './Mockmv'; // Mockmv.js에서 mockMovies를 import 합니다.\nimport MvBanner from './MvBanner'; // MvBanner 컴포넌트를 import 합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvchoPage() {\n  _s();\n  const [banners, setBanners] = useState([]);\n  useEffect(() => {\n    // 여기서 랜덤으로 영화를 선택하고, banners 상태를 업데이트합니다.\n    const selectedMovies = Array.from({\n      length: 12\n    }, () => {\n      const randomIndex = Math.floor(Math.random() * mockMovies.length);\n      return mockMovies[randomIndex];\n    });\n    setBanners(selectedMovies);\n  }, []); // 빈 배열은 컴포넌트가 마운트 될 때 한 번만 이 effect를 실행하라는 의미입니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvchoPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainText\",\n      children: \"\\uC7AC\\uBBF8\\uC788\\uAC8C \\uBD24\\uAC70\\uB098 \\uB208\\uAE38\\uC774 \\uAC00\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subText\",\n      children: \"\\uCC1C\\uD55C \\uC601\\uD654\\uB4E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C MOVIELY\\uAC00 \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB4E4\\uC744 \\uCD94\\uCC9C\\uD574 \\uB4DC\\uB824\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickyTop\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/recommendations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"recommendButton\",\n          children: \"\\uC601\\uD654 \\uCD94\\uCC9C \\uBC1B\\uAE30 >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreButtons\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genreButton\",\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bannersContainer\",\n        children: banners.map((movie, index) => /*#__PURE__*/_jsxDEV(MvBanner, {\n          movie: movie\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(MvchoPage, \"hrLvPCLPHM6cpg7gXxBBGT80Iz0=\");\n_c = MvchoPage;\nexport default MvchoPage;\nvar _c;\n$RefreshReg$(_c, \"MvchoPage\");","map":{"version":3,"names":["React","useState","useEffect","mockMovies","MvBanner","jsxDEV","_jsxDEV","MvchoPage","_s","banners","setBanners","selectedMovies","Array","from","length","randomIndex","Math","floor","random","className","children","src","logoImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","Link","to","genres","map","genre","movie","index","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { mockMovies } from './Mockmv'; // Mockmv.js에서 mockMovies를 import 합니다.\nimport MvBanner from './MvBanner'; // MvBanner 컴포넌트를 import 합니다.\n\nfunction MvchoPage() {\n  const [banners, setBanners] = useState([]);\n\n  useEffect(() => {\n    // 여기서 랜덤으로 영화를 선택하고, banners 상태를 업데이트합니다.\n    const selectedMovies = Array.from({ length: 12 }, () => {\n      const randomIndex = Math.floor(Math.random() * mockMovies.length);\n      return mockMovies[randomIndex];\n    });\n    setBanners(selectedMovies);\n  }, []); // 빈 배열은 컴포넌트가 마운트 될 때 한 번만 이 effect를 실행하라는 의미입니다.\n\n  return (\n    <div className=\"MvchoPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\"/>\n      <div className=\"mainText\">재미있게 봤거나 눈길이 가는 영화들을 평가해주세요.</div>\n      <div className=\"subText\">찜한 영화들을 바탕으로 MOVIELY가 취향저격 영화들을 추천해 드려요.</div>\n      <div className=\"stickyTop\">\n        <Link to=\"/recommendations\">\n          <button className=\"recommendButton\">영화 추천 받기 &gt;</button>\n        </Link>\n        <div className=\"genreButtons\">\n          {genres.map((genre) => (\n            <button key={genre} className=\"genreButton\">{genre}</button>\n          ))}\n        </div>\n      \n      {/* 배너를 렌더링하는 부분 */}\n      <div className=\"bannersContainer\">\n        {banners.map((movie, index) => (\n          <MvBanner key={index} movie={movie} />\n        ))}\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default MvchoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}