{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Link}from'react-router-dom';import'../css/LandingPage.css';import logoImage from'../logo.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LandingPage(){const[movies,setMovies]=useState([]);useEffect(()=>{const fetchMovies=async()=>{try{const response=await fetch('http://43.203.39.119:8080/api/movies?size=1000',{mode:'cors'});const data=await response.json();if(data&&data.content){setMovies(data.content);}}catch(error){console.error('Failed to fetch movies:',error);}};fetchMovies();},[]);const getRandomMovies=(movies,num)=>{const shuffled=[...movies].sort(()=>0.5-Math.random());return shuffled.slice(0,num);};const randomMovies=getRandomMovies(movies,3);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\",className:\"logo\"})}),/*#__PURE__*/_jsxs(\"h1\",{className:\"heading\",children:[\"\\uC624\\uB298 \\uBB58 \\uBCFC\\uC9C0 \\uBAA8\\uB974\\uACA0\\uB2E4\\uACE0\\uC694?\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uB0B4 \\uCDE8\\uD5A5\\uC5D0 \\uAF2D \\uB9DE\\uB294 OTT \\uCEE8\\uD150\\uCE20\\uB97C \\uCC3E\\uC544\\uBCF4\\uC138\\uC694!\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"buttonContainer\",children:/*#__PURE__*/_jsx(Link,{to:\"/log-sign\",className:\"button\",children:\"\\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-posters\",children:randomMovies.map((movie,index)=>/*#__PURE__*/_jsx(\"img\",{src:\"http://image.tmdb.org/t/p/w500\".concat(movie.poster_path),alt:movie.title,className:\"poster poster-\".concat(index+1)},movie.movie_id))})]});}export default LandingPage;","map":{"version":3,"names":["React","useEffect","useState","Link","logoImage","jsx","_jsx","jsxs","_jsxs","LandingPage","movies","setMovies","fetchMovies","response","fetch","mode","data","json","content","error","console","getRandomMovies","num","shuffled","sort","Math","random","slice","randomMovies","className","children","to","src","alt","map","movie","index","concat","poster_path","title","movie_id"],"sources":["/Users/autumn/moviely 오후 2.30.27/src/pages/LandingPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/LandingPage.css';\nimport logoImage from '../logo.png';\n\nfunction LandingPage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000', { mode: 'cors' });\n        const data = await response.json();\n        if (data && data.content) {\n          setMovies(data.content);\n        }\n      } catch (error) {\n        console.error('Failed to fetch movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  const getRandomMovies = (movies, num) => {\n    const shuffled = [...movies].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n\n  const randomMovies = getRandomMovies(movies, 3);\n\n  return (\n    <div className=\"container\">\n      <Link to=\"/\">\n        <img src={logoImage} alt=\"Logo\" className=\"logo\" />\n      </Link>\n      <h1 className=\"heading\">오늘 뭘 볼지 모르겠다고요?<br />내 취향에 꼭 맞는 OTT 컨텐츠를 찾아보세요!</h1>\n      <div className=\"buttonContainer\">\n        <Link to=\"/log-sign\" className=\"button\">로그인 및 회원가입</Link>\n      </div>\n      <div className=\"movie-posters\">\n        {randomMovies.map((movie, index) => (\n          <img\n            key={movie.movie_id}\n            src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            className={`poster poster-${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,wBAAwB,CAC/B,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAExCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gDAAgD,CAAE,CAAEC,IAAI,CAAE,MAAO,CAAC,CAAC,CAChG,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,EAAIA,IAAI,CAACE,OAAO,CAAE,CACxBP,SAAS,CAACK,IAAI,CAACE,OAAO,CAAC,CACzB,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAEDP,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,eAAe,CAAGA,CAACX,MAAM,CAAEY,GAAG,GAAK,CACvC,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGb,MAAM,CAAC,CAACc,IAAI,CAAC,IAAM,GAAG,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAC5D,MAAO,CAAAH,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAEL,GAAG,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAM,YAAY,CAAGP,eAAe,CAACX,MAAM,CAAE,CAAC,CAAC,CAE/C,mBACEF,KAAA,QAAKqB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBxB,IAAA,CAACH,IAAI,EAAC4B,EAAE,CAAC,GAAG,CAAAD,QAAA,cACVxB,IAAA,QAAK0B,GAAG,CAAE5B,SAAU,CAAC6B,GAAG,CAAC,MAAM,CAACJ,SAAS,CAAC,MAAM,CAAE,CAAC,CAC/C,CAAC,cACPrB,KAAA,OAAIqB,SAAS,CAAC,SAAS,CAAAC,QAAA,EAAC,wEAAe,cAAAxB,IAAA,QAAK,CAAC,6GAA0B,EAAI,CAAC,cAC5EA,IAAA,QAAKuB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BxB,IAAA,CAACH,IAAI,EAAC4B,EAAE,CAAC,WAAW,CAACF,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,oDAAU,CAAM,CAAC,CACtD,CAAC,cACNxB,IAAA,QAAKuB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BF,YAAY,CAACM,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAC7B9B,IAAA,QAEE0B,GAAG,kCAAAK,MAAA,CAAmCF,KAAK,CAACG,WAAW,CAAG,CAC1DL,GAAG,CAAEE,KAAK,CAACI,KAAM,CACjBV,SAAS,kBAAAQ,MAAA,CAAmBD,KAAK,CAAG,CAAC,CAAG,EAHnCD,KAAK,CAACK,QAIZ,CACF,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAA/B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}