{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvsrchPage.css';\nimport logoImage from '../logo.png';\nimport watchaLogo from '../watcha.png';\nimport netflixLogo from '../netflix.png';\nimport disneyPlusLogo from '../disneyplus.png';\nimport wavveLogo from '../wavve.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvsrchPage() {\n  _s();\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []);\n  const platformMapping = useMemo(() => ({\n    '전체': 'All',\n    '넷플릭스': 'Netflix',\n    '디즈니플러스': 'Disney Plus',\n    '왓챠': 'Watcha',\n    '웨이브': 'Wavve'\n  }), []);\n  const platforms = useMemo(() => [{\n    name: '전체',\n    logo: null\n  }, {\n    name: '넷플릭스',\n    logo: netflixLogo\n  }, {\n    name: '디즈니플러스',\n    logo: disneyPlusLogo\n  }, {\n    name: '왓챠',\n    logo: watchaLogo\n  }, {\n    name: '웨이브',\n    logo: wavveLogo\n  }], []);\n  const genres = useMemo(() => Object.keys(genreMapping), [genreMapping]);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [selectedPlatform, setSelectedPlatform] = useState('전체');\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showPlatforms, setShowPlatforms] = useState(false);\n  const [showGenres, setShowGenres] = useState(false);\n  const userId = 1; // 하드코딩된 사용자 ID를 props로 받음\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        console.log('Fetching movies...');\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000', {\n          mode: 'cors'\n        });\n        console.log('API 요청 성공:', response);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API 응답 데이터:', data);\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ').map(platform => platform.toLowerCase()) : [],\n            genre: movie.genre ? movie.genre.split(', ') : []\n          }));\n          setMovies(processedData);\n          setFilteredMovies(processedData);\n          setLoading(false);\n          console.log('Processed Data:', processedData);\n        } else {\n          console.error('Unexpected response format:', data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n  const filterMovies = () => {\n    let filtered = [...movies];\n    if (selectedPlatform !== '전체') {\n      const selectedPlatformInEnglish = platformMapping[selectedPlatform].toLowerCase();\n      console.log(`Selected Platform in English: ${selectedPlatformInEnglish}`);\n      filtered = filtered.filter(movie => {\n        console.log(`Movie Platforms: ${movie.flatrate}`);\n        return movie.flatrate.includes(selectedPlatformInEnglish);\n      });\n    }\n    if (selectedGenre !== '장르 전체') {\n      filtered = filtered.filter(movie => movie.genre.includes(genreMapping[selectedGenre]));\n    }\n    if (searchTerm) {\n      const terms = searchTerm.split(' ').filter(term => term);\n      const regex = new RegExp(terms.join('|'), 'i');\n      filtered = filtered.filter(movie => regex.test(movie.title));\n    }\n    return filtered;\n  };\n  useEffect(() => {\n    setFilteredMovies(filterMovies());\n  }, [selectedPlatform, selectedGenre, searchTerm, movies]);\n  const handleSearchClick = () => {\n    setFilteredMovies(filterMovies());\n  };\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n    setShowGenres(false);\n  };\n  const handlePlatformClick = platform => {\n    setSelectedPlatform(platform);\n    setShowPlatforms(false);\n  };\n  let resultText = '';\n  if (selectedPlatform !== '전체') {\n    resultText += `플랫폼 : <span style=\"color: yellow;\">${selectedPlatform}</span>`;\n  }\n  if (selectedGenre !== '장르 전체') {\n    if (resultText) {\n      resultText += ', ';\n    }\n    resultText += `장르 : <span style=\"color: yellow;\">${selectedGenre}</span>`;\n  }\n  if (resultText) {\n    resultText += ' 검색 결과입니다.';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvsrchPage\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdownContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPlatforms(!showPlatforms),\n          className: \"platformButton\",\n          children: \"\\uD50C\\uB7AB\\uD3FC\\u3164\\u3164\\u3164\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), showPlatforms && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"platformDropdown\",\n          children: platforms.map(platform => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlatformClick(platform.name),\n            className: \"filter\",\n            children: [platform.logo && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: platform.logo,\n              alt: platform.name,\n              className: \"logoIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this), platform.name]\n          }, platform.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdownContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowGenres(!showGenres),\n          className: \"genreButton\",\n          children: \"\\uC7A5\\uB974\\u3164\\u3164\\u3164\\u3164\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), showGenres && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genreDropdown\",\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleGenreClick(genre),\n            className: \"filter\",\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"searchInput\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSearchClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        onClick: handleSearchClick,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultText\",\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: resultText\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieResults\",\n      style: {\n        marginTop: '30px'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : filteredMovies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieGrid\",\n        children: filteredMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(MvBanner, {\n          title: movie.title,\n          poster: movie.poster_path,\n          flatrate: movie.flatrate.join(', '),\n          rating: Math.round(movie.vote_average / 2),\n          movieId: movie.id // 영화 ID 전달\n          ,\n          userId: userId // 사용자 ID 전달\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noMovies\",\n        children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(MvsrchPage, \"hP+t8gaIt2nYo7DqWKy892Y3iAA=\");\n_c = MvsrchPage;\nexport default MvsrchPage;\nvar _c;\n$RefreshReg$(_c, \"MvsrchPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","MvBanner","logoImage","watchaLogo","netflixLogo","disneyPlusLogo","wavveLogo","jsxDEV","_jsxDEV","MvsrchPage","_s","genreMapping","platformMapping","platforms","name","logo","genres","Object","keys","selectedGenre","setSelectedGenre","selectedPlatform","setSelectedPlatform","movies","setMovies","filteredMovies","setFilteredMovies","loading","setLoading","searchTerm","setSearchTerm","showPlatforms","setShowPlatforms","showGenres","setShowGenres","userId","fetchMovies","console","log","response","fetch","mode","ok","Error","status","data","json","content","processedData","map","movie","flatrate","split","platform","toLowerCase","genre","error","filterMovies","filtered","selectedPlatformInEnglish","filter","includes","terms","term","regex","RegExp","join","test","title","handleSearchClick","handleGenreClick","handlePlatformClick","resultText","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","style","marginTop","dangerouslySetInnerHTML","__html","length","index","poster","poster_path","rating","Math","round","vote_average","movieId","id","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvsrchPage.css';\nimport logoImage from '../logo.png';\nimport watchaLogo from '../watcha.png';\nimport netflixLogo from '../netflix.png';\nimport disneyPlusLogo from '../disneyplus.png';\nimport wavveLogo from '../wavve.png';\n\nfunction MvsrchPage() {\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []);\n\n  const platformMapping = useMemo(() => ({\n    '전체': 'All',\n    '넷플릭스': 'Netflix',\n    '디즈니플러스': 'Disney Plus',\n    '왓챠': 'Watcha',\n    '웨이브': 'Wavve'\n  }), []);\n\n  const platforms = useMemo(() => [\n    { name: '전체', logo: null },\n    { name: '넷플릭스', logo: netflixLogo },\n    { name: '디즈니플러스', logo: disneyPlusLogo },\n    { name: '왓챠', logo: watchaLogo },\n    { name: '웨이브', logo: wavveLogo }\n  ], []);\n\n  const genres = useMemo(() => Object.keys(genreMapping), [genreMapping]);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [selectedPlatform, setSelectedPlatform] = useState('전체');\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showPlatforms, setShowPlatforms] = useState(false);\n  const [showGenres, setShowGenres] = useState(false);\n  const userId = 1; // 하드코딩된 사용자 ID를 props로 받음\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        console.log('Fetching movies...');\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000', { mode: 'cors' });\n        console.log('API 요청 성공:', response);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API 응답 데이터:', data);\n\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ').map(platform => platform.toLowerCase()) : [],\n            genre: movie.genre ? movie.genre.split(', ') : []\n          }));\n          setMovies(processedData);\n          setFilteredMovies(processedData);\n          setLoading(false);\n          console.log('Processed Data:', processedData);\n        } else {\n          console.error('Unexpected response format:', data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  const filterMovies = () => {\n    let filtered = [...movies];\n\n    if (selectedPlatform !== '전체') {\n      const selectedPlatformInEnglish = platformMapping[selectedPlatform].toLowerCase();\n      console.log(`Selected Platform in English: ${selectedPlatformInEnglish}`);\n      filtered = filtered.filter(movie => {\n        console.log(`Movie Platforms: ${movie.flatrate}`);\n        return movie.flatrate.includes(selectedPlatformInEnglish);\n      });\n    }\n\n    if (selectedGenre !== '장르 전체') {\n      filtered = filtered.filter(movie => movie.genre.includes(genreMapping[selectedGenre]));\n    }\n\n    if (searchTerm) {\n      const terms = searchTerm.split(' ').filter(term => term);\n      const regex = new RegExp(terms.join('|'), 'i');\n      filtered = filtered.filter(movie => regex.test(movie.title));\n    }\n\n    return filtered;\n  };\n\n  useEffect(() => {\n    setFilteredMovies(filterMovies());\n  }, [selectedPlatform, selectedGenre, searchTerm, movies]);\n\n  const handleSearchClick = () => {\n    setFilteredMovies(filterMovies());\n  };\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n    setShowGenres(false);\n  };\n\n  const handlePlatformClick = (platform) => {\n    setSelectedPlatform(platform);\n    setShowPlatforms(false);\n  };\n\n  let resultText = '';\n  if (selectedPlatform !== '전체') {\n    resultText += `플랫폼 : <span style=\"color: yellow;\">${selectedPlatform}</span>`;\n  }\n  if (selectedGenre !== '장르 전체') {\n    if (resultText) {\n      resultText += ', ';\n    }\n    resultText += `장르 : <span style=\"color: yellow;\">${selectedGenre}</span>`;\n  }\n  if (resultText) {\n    resultText += ' 검색 결과입니다.';\n  }\n\n  return (\n    <div className=\"MvsrchPage\">\n      <Link to=\"/\" className=\"logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"searchContainer\">\n        <div className=\"dropdownContainer\">\n          <button onClick={() => setShowPlatforms(!showPlatforms)} className=\"platformButton\">플랫폼ㅤㅤㅤ▼</button>\n          {showPlatforms && (\n            <div className=\"platformDropdown\">\n              {platforms.map((platform) => (\n                <button\n                  key={platform.name}\n                  onClick={() => handlePlatformClick(platform.name)}\n                  className=\"filter\"\n                >\n                  {platform.logo && <img src={platform.logo} alt={platform.name} className=\"logoIcon\"/>}\n                  {platform.name}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"dropdownContainer\">\n          <button onClick={() => setShowGenres(!showGenres)} className=\"genreButton\">장르ㅤㅤㅤㅤ▼</button>\n          {showGenres && (\n            <div className=\"genreDropdown\">\n              {genres.map((genre) => (\n                <button\n                  key={genre}\n                  onClick={() => handleGenreClick(genre)}\n                  className=\"filter\"\n                >\n                  {genre}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"검색\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && handleSearchClick()} \n        />\n        <button className=\"searchButton\" onClick={handleSearchClick}>검색</button>\n      </div>\n      <div className=\"resultText\" style={{ marginTop: '20px' }}>\n        <span dangerouslySetInnerHTML={{ __html: resultText }} />\n      </div>\n      <div className=\"movieResults\" style={{ marginTop: '30px' }}>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          filteredMovies.length > 0 ? (\n            <div className=\"movieGrid\">\n              {filteredMovies.map((movie, index) => (\n                <MvBanner\n                  key={index}\n                  title={movie.title}\n                  poster={movie.poster_path}\n                  flatrate={movie.flatrate.join(', ')}\n                  rating={Math.round(movie.vote_average / 2)}\n                  movieId={movie.id} // 영화 ID 전달\n                  userId={userId} // 사용자 ID 전달\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"noMovies\">검색 결과가 없습니다.</div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MvsrchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}