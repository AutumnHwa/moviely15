{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import{Link,useNavigate}from'react-router-dom';import MvBanner from'./MvBanner';import'../css/MvchoPage.css';import logoImage from'../logo.png';import{useAuth}from'../context/AuthContext';// AuthContext import\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MvchoPage(){const{authToken,user,logout}=useAuth();// AuthContext에서 authToken, user 및 logout 함수 가져오기\nconst navigate=useNavigate();const genreMapping=useMemo(()=>({'장르 전체':'All','액션':'28','모험':'12','애니메이션':'16','코미디':'35','범죄':'80','다큐멘터리':'99','드라마':'18','가족':'10751','판타지':'14','역사':'36','공포':'27','음악':'10402','미스터리':'9648','로맨스':'10749','SF':'878','TV 영화':'10770','스릴러':'53','전쟁':'10752','서부':'37'}),[]);const genres=useMemo(()=>Object.keys(genreMapping),[genreMapping]);const[selectedGenre,setSelectedGenre]=useState('장르 전체');const[movies,setMovies]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchMovies=async()=>{try{console.log('Fetching movies...');const response=await fetch('http://43.203.39.119:8080/api/movies?size=1000',{mode:'cors'});console.log('API 요청 성공:',response);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();console.log('API 응답 데이터:',data);if(data&&data.content){const processedData=data.content.map(movie=>({...movie,flatrate:movie.flatrate?movie.flatrate.split(', '):[],genre:movie.genre?movie.genre.split(', '):[]// 장르 필드를 배열로 변환\n}));setMovies(processedData);console.log('Processed Data:',processedData);}else{console.error('Unexpected response format:',data);}setLoading(false);}catch(error){console.error('Error fetching movies:',error);setLoading(false);}};fetchMovies();},[]);const filteredMovies=selectedGenre==='장르 전체'?movies:movies.filter(movie=>movie.genre.includes(genreMapping[selectedGenre]));const banners=filteredMovies.map((movie,index)=>/*#__PURE__*/_jsx(MvBanner,{title:movie.title,poster:movie.poster_path,flatrate:movie.flatrate.join(', '),rating:Math.round(movie.vote_average/2),movieId:movie.id// 영화 ID 전달\n,userId:user===null||user===void 0?void 0:user.id// 사용자 ID 전달\n},index));const handleAuthButtonClick=()=>{if(authToken){logout();}else{navigate('/log-sign');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"MvchoPage\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"pageHeader\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"authButton\",onClick:handleAuthButtonClick,children:authToken?'로그아웃':'로그인'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mainText\",children:\"\\uC7AC\\uBBF8\\uC788\\uAC8C \\uBD24\\uAC70\\uB098 \\uB208\\uAE38\\uC774 \\uAC00\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subText\",children:\"\\uCC1C\\uD55C \\uC601\\uD654\\uB4E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C MOVIELY\\uAC00 \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB4E4\\uC744 \\uCD94\\uCC9C\\uD574 \\uB4DC\\uB824\\uC694.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stickyTop\",children:[/*#__PURE__*/_jsx(Link,{to:\"/recommendations\",children:/*#__PURE__*/_jsx(\"button\",{className:\"recommendButton\",children:\"\\uC601\\uD654 \\uCD94\\uCC9C \\uBC1B\\uAE30 >\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"genreButtons\",children:genres.map(genre=>/*#__PURE__*/_jsx(\"button\",{className:\"genreButton1 \".concat(selectedGenre===genre?'active':''),onClick:()=>setSelectedGenre(genre),children:genre},genre))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bannerGrid\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\uB85C\\uB529 \\uC911...\"}):banners.length>0?banners:/*#__PURE__*/_jsx(\"div\",{className:\"noMovies\",children:\"\\uC120\\uD0DD\\uD558\\uC2E0 \\uC7A5\\uB974\\uC758 \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]});}export default MvchoPage;","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","useNavigate","MvBanner","logoImage","useAuth","jsx","_jsx","jsxs","_jsxs","MvchoPage","authToken","user","logout","navigate","genreMapping","genres","Object","keys","selectedGenre","setSelectedGenre","movies","setMovies","loading","setLoading","fetchMovies","console","log","response","fetch","mode","ok","Error","concat","status","data","json","content","processedData","map","movie","flatrate","split","genre","error","filteredMovies","filter","includes","banners","index","title","poster","poster_path","join","rating","Math","round","vote_average","movieId","id","userId","handleAuthButtonClick","className","children","to","src","alt","onClick","length"],"sources":["/Users/autumn/Library/Mobile Documents/com~apple~CloudDocs/.Trash/moviely/src/pages/MvchoPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext'; // AuthContext import\n\nfunction MvchoPage() {\n  const { authToken, user, logout } = useAuth(); // AuthContext에서 authToken, user 및 logout 함수 가져오기\n  const navigate = useNavigate();\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []);\n\n  const genres = useMemo(() => Object.keys(genreMapping), [genreMapping]);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        console.log('Fetching movies...');\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000', { mode: 'cors' });\n        console.log('API 요청 성공:', response);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API 응답 데이터:', data);\n\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n            genre: movie.genre ? movie.genre.split(', ') : [] // 장르 필드를 배열로 변환\n          }));\n          setMovies(processedData);\n          console.log('Processed Data:', processedData); \n        } else {\n          console.error('Unexpected response format:', data);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  const filteredMovies = selectedGenre === '장르 전체' ? movies : movies.filter(movie =>\n    movie.genre.includes(genreMapping[selectedGenre])\n  );\n\n  const banners = filteredMovies.map((movie, index) => (\n    <MvBanner\n      key={index}\n      title={movie.title}\n      poster={movie.poster_path}\n      flatrate={movie.flatrate.join(', ')}\n      rating={Math.round(movie.vote_average / 2)}\n      movieId={movie.id} // 영화 ID 전달\n      userId={user?.id} // 사용자 ID 전달\n    />\n  ));\n\n  const handleAuthButtonClick = () => {\n    if (authToken) {\n      logout();\n    } else {\n      navigate('/log-sign');\n    }\n  };\n\n  return (\n    <div className=\"MvchoPage\">\n      <header className=\"pageHeader\">\n        <Link to=\"/\" className=\"logo\">\n          <img src={logoImage} alt=\"Logo\" />\n        </Link>\n        <button className=\"authButton\" onClick={handleAuthButtonClick}>\n          {authToken ? '로그아웃' : '로그인'}\n        </button>\n      </header>\n      <div className=\"mainText\">재미있게 봤거나 눈길이 가는 영화들을 평가해주세요.</div>\n      <div className=\"subText\">찜한 영화들을 바탕으로 MOVIELY가 취향저격 영화들을 추천해 드려요.</div>\n      <div className=\"stickyTop\">\n        <Link to=\"/recommendations\">\n          <button className=\"recommendButton\">영화 추천 받기 &gt;</button>\n        </Link>\n        <div className=\"genreButtons\">\n          {genres.map((genre) => (\n            <button\n              key={genre}\n              className={`genreButton1 ${selectedGenre === genre ? 'active' : ''}`}\n              onClick={() => setSelectedGenre(genre)}\n            >\n              {genre}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"bannerGrid\">\n        {loading ? <div className=\"loading\">로딩 중...</div> : (banners.length > 0 ? banners : <div className=\"noMovies\">선택하신 장르의 영화가 없습니다.</div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default MvchoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}