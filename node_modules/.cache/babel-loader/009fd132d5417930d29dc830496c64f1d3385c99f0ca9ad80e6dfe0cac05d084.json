{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MycalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport Popcal from './Popcal'; // Popcal 컴포넌트를 임포트합니다.\nimport '../css/MycalPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MycalPage() {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 상태명 변경\n\n  // 날짜 클릭 핸들러를 추가해야 합니다.\n  const handleDateClick = () => {\n    // 여기에서 팝업창을 띄우는 로직을 추가할 수 있습니다.\n    setIsPopupOpen(true); // 팝업창을 띄우기 위해 상태를 true로 설정합니다.\n  };\n\n  // 기록하기 버튼 클릭 핸들러\n  const handleRecordButtonClick = () => {\n    setIsPopupOpen(true); // 팝업창을 띄우기 위해 상태를 true로 설정합니다.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycalPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        defaultView: \"dayGridMonth\",\n        plugins: [dayGridPlugin],\n        dateClick: handleDateClick // 날짜 클릭 이벤트에 핸들러 연결\n        ,\n        height: \"470px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popcal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(MycalPage, \"vFErrUU1qYQoaBmFpaEBY5pk8jE=\");\n_c = MycalPage;\nexport default MycalPage;\nvar _c;\n$RefreshReg$(_c, \"MycalPage\");","map":{"version":3,"names":["React","useState","Link","FullCalendar","dayGridPlugin","Popcal","logoImage","jsxDEV","_jsxDEV","MycalPage","_s","isPopupOpen","setIsPopupOpen","handleDateClick","handleRecordButtonClick","className","children","defaultView","plugins","dateClick","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MycalPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport Popcal from './Popcal'; // Popcal 컴포넌트를 임포트합니다.\nimport '../css/MycalPage.css';\nimport logoImage from '../logo.png';\n\nfunction MycalPage() {\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 상태명 변경\n\n  // 날짜 클릭 핸들러를 추가해야 합니다.\n  const handleDateClick = () => {\n    // 여기에서 팝업창을 띄우는 로직을 추가할 수 있습니다.\n    setIsPopupOpen(true); // 팝업창을 띄우기 위해 상태를 true로 설정합니다.\n  };\n\n  // 기록하기 버튼 클릭 핸들러\n  const handleRecordButtonClick = () => {\n    setIsPopupOpen(true); // 팝업창을 띄우기 위해 상태를 true로 설정합니다.\n  };\n\n  return (\n    <div className=\"mycalPage\">\n      {/* 기존 코드 ... */}\n      <div className=\"calendar-container\">\n        <FullCalendar\n          defaultView=\"dayGridMonth\"\n          plugins={[dayGridPlugin]}\n          dateClick={handleDateClick} // 날짜 클릭 이벤트에 핸들러 연결\n          height=\"470px\"\n        />\n      </div>\n      {isPopupOpen && <Popcal />} {/* 조건부 렌더링을 사용하여 Popcal 컴포넌트 표시 */}\n    </div>\n  );\n}\n\nexport default MycalPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAC/B,OAAO,sBAAsB;AAC7B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAD,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IACpCF,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBR,OAAA;MAAKO,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCR,OAAA,CAACL,YAAY;QACXc,WAAW,EAAC,cAAc;QAC1BC,OAAO,EAAE,CAACd,aAAa,CAAE;QACzBe,SAAS,EAAEN,eAAgB,CAAC;QAAA;QAC5BO,MAAM,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLb,WAAW,iBAAIH,OAAA,CAACH,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACd,EAAA,CA5BQD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}