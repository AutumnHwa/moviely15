{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/LogSignPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../css/LogSignPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogSignPage() {\n  _s();\n  const navigate = useNavigate();\n  const handleGoogleLogin = () => {\n    window.location.href = 'http://moviely.duckdns.org/oauth2/authorize/google';\n  };\n  useEffect(() => {\n    const handleBackendRedirection = async code => {\n      try {\n        const response = await fetch(`http://moviely.duckdns.org/api/login?code=${code}`);\n        const data = await response.json();\n        console.log('백엔드 응답 데이터:', data);\n        if (data.isNewUser) {\n          navigate('/add');\n        } else {\n          navigate('/movie-select');\n        }\n      } catch (error) {\n        console.error('Backend redirection failed:', error);\n        alert('백엔드 처리에 실패했습니다.');\n      }\n    };\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const error = urlParams.get('error');\n    if (code) {\n      handleBackendRedirection(code);\n    } else if (error) {\n      alert('Google 로그인에 실패했습니다.');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logSignPage\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logSign-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logSignBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC18C\\uC15C \\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\\uC73C\\uB85C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 27\n        }, this), \"MOVIELY\\uC758 \\uBAA8\\uB4E0 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC774\\uC6A9\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"googleLoginButton\",\n        onClick: handleGoogleLogin,\n        children: \"Google\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(LogSignPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LogSignPage;\nexport default LogSignPage;\nvar _c;\n$RefreshReg$(_c, \"LogSignPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","Link","logoImage","jsxDEV","_jsxDEV","LogSignPage","_s","navigate","handleGoogleLogin","window","location","href","handleBackendRedirection","code","response","fetch","data","json","console","log","isNewUser","error","alert","urlParams","URLSearchParams","search","get","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/LogSignPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../css/LogSignPage.css';\nimport logoImage from '../logo.png';\n\nfunction LogSignPage() {\n  const navigate = useNavigate();\n\n  const handleGoogleLogin = () => {\n    window.location.href = 'http://moviely.duckdns.org/oauth2/authorize/google';\n  };\n\n  useEffect(() => {\n    const handleBackendRedirection = async (code) => {\n      try {\n        const response = await fetch(`http://moviely.duckdns.org/api/login?code=${code}`);\n        const data = await response.json();\n        console.log('백엔드 응답 데이터:', data);\n\n        if (data.isNewUser) {\n          navigate('/add');\n        } else {\n          navigate('/movie-select');\n        }\n      } catch (error) {\n        console.error('Backend redirection failed:', error);\n        alert('백엔드 처리에 실패했습니다.');\n      }\n    };\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const error = urlParams.get('error');\n\n    if (code) {\n      handleBackendRedirection(code);\n    } else if (error) {\n      alert('Google 로그인에 실패했습니다.');\n    }\n  }, [navigate]);\n\n  return (\n    <div className=\"logSignPage\">\n      <Link to=\"/\" className=\"logSign-logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"logSignBox\">\n        <h2>로그인 및 회원가입</h2>\n        <p>소셜 로그인 및 회원가입으로<br />MOVIELY의 모든 서비스를 이용하실 수 있습니다.</p>\n        <button className=\"googleLoginButton\" onClick={handleGoogleLogin}>\n          Google로 시작하기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default LogSignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}