{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\n// Load gapi script dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadGapiScript = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    script.async = true;\n    script.defer = true;\n    script.onload = () => resolve();\n    script.onerror = error => reject(error);\n    document.body.appendChild(script);\n  });\n};\n\n// Initialize React app after gapi script is loaded\nconst initApp = async () => {\n  try {\n    await loadGapiScript();\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  } catch (error) {\n    console.error('Failed to load gapi script:', error);\n  }\n};\ninitApp();","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","loadGapiScript","Promise","resolve","reject","script","document","createElement","src","async","defer","onload","onerror","error","body","appendChild","initApp","root","createRoot","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","console"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\n// Load gapi script dynamically\nconst loadGapiScript = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    script.async = true;\n    script.defer = true;\n    script.onload = () => resolve();\n    script.onerror = (error) => reject(error);\n    document.body.appendChild(script);\n  });\n};\n\n// Initialize React app after gapi script is loaded\nconst initApp = async () => {\n  try {\n    await loadGapiScript();\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  } catch (error) {\n    console.error('Failed to load gapi script:', error);\n  }\n};\n\ninitApp();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,mCAAmC;IAChDH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;IACnBL,MAAM,CAACM,MAAM,GAAG,MAAMR,OAAO,CAAC,CAAC;IAC/BE,MAAM,CAACO,OAAO,GAAIC,KAAK,IAAKT,MAAM,CAACS,KAAK,CAAC;IACzCP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,MAAM,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACF,MAAMf,cAAc,CAAC,CAAC;IACtB,MAAMgB,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAACZ,QAAQ,CAACa,cAAc,CAAC,MAAM,CAAC,CAAC;IACjEF,IAAI,CAACG,MAAM,eACTpB,OAAA,CAACJ,KAAK,CAACyB,UAAU;MAAAC,QAAA,eACftB,OAAA,CAACF,GAAG;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CACpB,CAAC;EACH,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdc,OAAO,CAACd,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;AAEDG,OAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}