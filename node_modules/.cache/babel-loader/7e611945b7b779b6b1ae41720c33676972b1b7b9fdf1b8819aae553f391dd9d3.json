{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/MvsrchPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvsrchPage() {\n  _s();\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showGenres, setShowGenres] = useState(false);\n  const [showPlatforms, setShowPlatforms] = useState(false);\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPlatform, setSelectedPlatform] = useState('All');\n  const genres = ['All', 'Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Mystery', 'Romance', 'Sci-Fi', 'TV Movie', 'Thriller', 'War', 'Western'];\n  const platforms = ['All', 'Netflix', 'Disney Plus', 'Watcha', 'Wavve'];\n  const handleSearchClick = () => {\n    navigate('/movie-search', {\n      state: {\n        searchTerm,\n        selectedGenre,\n        selectedPlatform\n      }\n    });\n  };\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n    setShowGenres(false);\n  };\n  const handlePlatformSelect = platform => {\n    setSelectedPlatform(platform);\n    setShowPlatforms(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvsrchPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"myPageButton\",\n      onClick: () => navigate('/my/watched'),\n      children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowGenres(!showGenres),\n        className: \"genreButton\",\n        children: \"\\uC7A5\\uB974\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), showGenres && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreDropdown\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenreSelect(genre),\n          className: selectedGenre === genre ? \"selectedFilter\" : \"filter\",\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPlatforms(!showPlatforms),\n        className: \"platformButton\",\n        children: \"\\uD50C\\uB7AB\\uD3FC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), showPlatforms && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"platformDropdown\",\n        children: platforms.map(platform => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePlatformSelect(platform),\n          className: selectedPlatform === platform ? \"selectedFilter\" : \"filter\",\n          children: platform\n        }, platform, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"searchInput\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        onClick: handleSearchClick,\n        children: \"\\uAC80\\uC0C9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(MvsrchPage, \"coMH9AmdpKJTSZCWKflYezwRNgM=\", false, function () {\n  return [useNavigate];\n});\n_c = MvsrchPage;\nexport default MvsrchPage;\nvar _c;\n$RefreshReg$(_c, \"MvsrchPage\");","map":{"version":3,"names":["React","useState","useNavigate","logoImage","jsxDEV","_jsxDEV","MvsrchPage","_s","navigate","searchTerm","setSearchTerm","showGenres","setShowGenres","showPlatforms","setShowPlatforms","selectedGenre","setSelectedGenre","selectedPlatform","setSelectedPlatform","genres","platforms","handleSearchClick","state","handleGenreSelect","genre","handlePlatformSelect","platform","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/MvsrchPage.css'; \nimport logoImage from '../logo.png'; \n\nfunction MvsrchPage() {\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showGenres, setShowGenres] = useState(false);\n  const [showPlatforms, setShowPlatforms] = useState(false);\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPlatform, setSelectedPlatform] = useState('All');\n\n  const genres = ['All', 'Action', 'Adventure', 'Animation', 'Comedy', \n    'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', \n    'History', 'Horror', 'Music', 'Mystery', 'Romance', \n    'Sci-Fi', 'TV Movie', 'Thriller', 'War', 'Western'];\n  \n  const platforms = ['All', 'Netflix', 'Disney Plus', 'Watcha', 'Wavve'];\n\n  const handleSearchClick = () => {\n    navigate('/movie-search', { state: { searchTerm, selectedGenre, selectedPlatform } });\n  };\n\n  const handleGenreSelect = (genre) => {\n    setSelectedGenre(genre);\n    setShowGenres(false);\n  };\n\n  const handlePlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n    setShowPlatforms(false);\n  };\n\n  return (\n    <div className=\"MvsrchPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\"/>\n      <button className=\"myPageButton\" onClick={() => navigate('/my/watched')}>마이페이지</button>\n      <div className=\"filterButtons\">\n        <button onClick={() => setShowGenres(!showGenres)} className=\"genreButton\">장르</button>\n        {showGenres && (\n          <div className=\"genreDropdown\">\n            {genres.map((genre) => (\n              <button key={genre} onClick={() => handleGenreSelect(genre)} className={selectedGenre === genre ? \"selectedFilter\" : \"filter\"}>\n                {genre}\n              </button>\n            ))}\n          </div>\n        )}\n        <button onClick={() => setShowPlatforms(!showPlatforms)} className=\"platformButton\">플랫폼</button>\n        {showPlatforms && (\n          <div className=\"platformDropdown\">\n            {platforms.map((platform) => (\n              <button key={platform} onClick={() => handlePlatformSelect(platform)} className={selectedPlatform === platform ? \"selectedFilter\" : \"filter\"}>\n                {platform}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"searchContainer\">\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"검색\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button className=\"searchButton\" onClick={handleSearchClick}>\n          검색하기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MvsrchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}