{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvchoPage() {\n  _s();\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []); // 빈 배열을 의존성으로 전달하여 한 번만 생성되도록 함\n\n  const genres = Object.keys(genreMapping);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // 오류 상태 추가\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n            genre: movie.genre ? movie.genre.split(', ') : [] // 장르 필드를 배열로 변환\n          }));\n          setMovies(processedData);\n          console.log('Processed Data:', processedData);\n        } else {\n          console.error('Unexpected response format:', data);\n          setError('Unexpected response format');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setError('Error fetching movies'); // 오류 메시지 설정\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []); // `genreMapping`을 의존성 배열에서 제거\n\n  const filteredMovies = selectedGenre === '장르 전체' ? movies : movies.filter(movie => movie.genre.includes(genreMapping[selectedGenre]));\n  const banners = filteredMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(MvBanner, {\n    title: movie.title,\n    poster: movie.poster_path,\n    flatrate: movie.flatrate.join(', '),\n    rating: Math.round(movie.vote_average / 2)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvchoPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainText\",\n      children: \"\\uC7AC\\uBBF8\\uC788\\uAC8C \\uBD24\\uAC70\\uB098 \\uB208\\uAE38\\uC774 \\uAC00\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subText\",\n      children: \"\\uCC1C\\uD55C \\uC601\\uD654\\uB4E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C MOVIELY\\uAC00 \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB4E4\\uC744 \\uCD94\\uCC9C\\uD574 \\uB4DC\\uB824\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickyTop\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/recommendations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"recommendButton\",\n          children: \"\\uC601\\uD654 \\uCD94\\uCC9C \\uBC1B\\uAE30 >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreButtons\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `genreButton1 ${selectedGenre === genre ? 'active' : ''}`,\n          onClick: () => setSelectedGenre(genre),\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannerGrid\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) // 오류 메시지 표시\n      : banners.length > 0 ? banners : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noMovies\",\n        children: \"\\uC120\\uD0DD\\uD558\\uC2E0 \\uC7A5\\uB974\\uC758 \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(MvchoPage, \"cKJPK61Urdy5rWHtxNTuVmnLAKU=\");\n_c = MvchoPage;\nexport default MvchoPage;\nvar _c;\n$RefreshReg$(_c, \"MvchoPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","MvBanner","logoImage","jsxDEV","_jsxDEV","MvchoPage","_s","genreMapping","genres","Object","keys","selectedGenre","setSelectedGenre","movies","setMovies","loading","setLoading","error","setError","fetchMovies","response","fetch","ok","Error","status","data","json","content","processedData","map","movie","flatrate","split","genre","console","log","filteredMovies","filter","includes","banners","index","title","poster","poster_path","join","rating","Math","round","vote_average","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","to","onClick","length","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\n\nfunction MvchoPage() {\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []); // 빈 배열을 의존성으로 전달하여 한 번만 생성되도록 함\n\n  const genres = Object.keys(genreMapping);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // 오류 상태 추가\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n            genre: movie.genre ? movie.genre.split(', ') : [] // 장르 필드를 배열로 변환\n          }));\n          setMovies(processedData);\n          console.log('Processed Data:', processedData); \n        } else {\n          console.error('Unexpected response format:', data);\n          setError('Unexpected response format');\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setError('Error fetching movies'); // 오류 메시지 설정\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []); // `genreMapping`을 의존성 배열에서 제거\n\n  const filteredMovies = selectedGenre === '장르 전체' ? movies : movies.filter(movie =>\n    movie.genre.includes(genreMapping[selectedGenre])\n  );\n\n  const banners = filteredMovies.map((movie, index) => (\n    <MvBanner\n      key={index}\n      title={movie.title}\n      poster={movie.poster_path}\n      flatrate={movie.flatrate.join(', ')} \n      rating={Math.round(movie.vote_average / 2)}\n    />\n  ));\n\n  return (\n    <div className=\"MvchoPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\"/>\n      <div className=\"mainText\">재미있게 봤거나 눈길이 가는 영화들을 평가해주세요.</div>\n      <div className=\"subText\">찜한 영화들을 바탕으로 MOVIELY가 취향저격 영화들을 추천해 드려요.</div>\n      <div className=\"stickyTop\">\n        <Link to=\"/recommendations\">\n          <button className=\"recommendButton\">영화 추천 받기 &gt;</button>\n        </Link>\n        <div className=\"genreButtons\">\n          {genres.map((genre) => (\n            <button\n              key={genre}\n              className={`genreButton1 ${selectedGenre === genre ? 'active' : ''}`}\n              onClick={() => setSelectedGenre(genre)}\n            >\n              {genre}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"bannerGrid\">\n        {loading ? (\n          <div className=\"loading\">로딩 중...</div>\n        ) : error ? (\n          <div className=\"error\">{error}</div> // 오류 메시지 표시\n        ) : banners.length > 0 ? (\n          banners\n        ) : (\n          <div className=\"noMovies\">선택하신 장르의 영화가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MvchoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}