{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvdetailPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { mockMovies } from './Mockmv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetailPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const movie = mockMovies.find(m => m.movie_id.toString() === id);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path,\n        alt: movie.title,\n        className: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetailPage, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetailPage;\nexport default MovieDetailPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailPage\");","map":{"version":3,"names":["React","useParams","mockMovies","jsxDEV","_jsxDEV","MovieDetailPage","_s","id","movie","find","m","movie_id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","poster_path","alt","title","overview","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvdetailPage.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { mockMovies } from './Mockmv';\n\nfunction MovieDetailPage() {\n  const { id } = useParams();\n  const movie = mockMovies.find(m => m.movie_id.toString() === id);\n\n  if (!movie) {\n    return <div>Movie not found.</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <img src={movie.poster_path} alt={movie.title} className=\"poster\"/>\n        <div className=\"details\">\n          <h1>{movie.title}</h1>\n          {/* Other details */}\n        </div>\n      </div>\n      <div className=\"section\">\n        <p>{movie.overview}</p>\n      </div>\n      <div className=\"section\">\n        {/* OTT buttons */}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,KAAK,GAAGN,UAAU,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC,KAAKL,EAAE,CAAC;EAEhE,IAAI,CAACC,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAS,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBT,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAL,QAAA,gBACtBT,OAAA;QAAKe,GAAG,EAAEX,KAAK,CAACY,WAAY;QAACC,GAAG,EAAEb,KAAK,CAACc,KAAM;QAACJ,SAAS,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnEb,OAAA;QAAKc,SAAS,EAAC,SAAS;QAAAL,QAAA,eACtBT,OAAA;UAAAS,QAAA,EAAKL,KAAK,CAACc;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNb,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAL,QAAA,eACtBT,OAAA;QAAAS,QAAA,EAAIL,KAAK,CAACe;MAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACNb,OAAA;MAAKc,SAAS,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAzBQD,eAAe;EAAA,QACPJ,SAAS;AAAA;AAAAuB,EAAA,GADjBnB,eAAe;AA2BxB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}