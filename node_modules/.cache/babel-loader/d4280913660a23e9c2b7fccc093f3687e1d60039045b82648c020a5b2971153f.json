{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // useState를 import\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { mockMovies } from './Mockmv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvchoPage() {\n  _s();\n  const genres = ['장르 전체', '액션', 'SF', '미스터리', '애니메이션', '로맨스', '판타지', '다큐멘터리', '코미디', '공포'];\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체'); // 선택된 장르 상태 추가\n\n  // 선택된 장르에 따라 필터링된 영화 데이터를 생성\n  const filteredMovies = selectedGenre === '장르 전체' ? mockMovies : mockMovies.filter(movie => movie.genre.split(', ').includes(selectedGenre));\n\n  // 필터링된 데이터를 사용하여 배너 생성\n  const banners = filteredMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(MvBanner, {\n    title: movie.title,\n    poster: movie.poster_path,\n    flatrate: movie.flatrate,\n    rating: Math.round(movie.vote_average / 2)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvchoPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainText\",\n      children: \"\\uC7AC\\uBBF8\\uC788\\uAC8C \\uBD24\\uAC70\\uB098 \\uB208\\uAE38\\uC774 \\uAC00\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subText\",\n      children: \"\\uCC1C\\uD55C \\uC601\\uD654\\uB4E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C MOVIELY\\uAC00 \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB4E4\\uC744 \\uCD94\\uCC9C\\uD574 \\uB4DC\\uB824\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickyTop\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/recommendations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"recommendButton\",\n          children: \"\\uC601\\uD654 \\uCD94\\uCC9C \\uBC1B\\uAE30 >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreButtons\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genreButton\",\n          onClick: () => setSelectedGenre(genre),\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannerGrid\",\n      children: banners.length > 0 ? banners : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noMovies\",\n        children: \"\\uC120\\uD0DD\\uD558\\uC2E0 \\uC7A5\\uB974\\uC758 \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(MvchoPage, \"t4Hx2J4v686a78DxqvpO6+CMw/Y=\");\n_c = MvchoPage;\nexport default MvchoPage;\nvar _c;\n$RefreshReg$(_c, \"MvchoPage\");","map":{"version":3,"names":["React","useState","Link","MvBanner","logoImage","mockMovies","jsxDEV","_jsxDEV","MvchoPage","_s","genres","selectedGenre","setSelectedGenre","filteredMovies","filter","movie","genre","split","includes","banners","map","index","title","poster","poster_path","flatrate","rating","Math","round","vote_average","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","to","onClick","length","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvchoPage.js"],"sourcesContent":["import React, { useState } from 'react';  // useState를 import\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { mockMovies } from './Mockmv';\n\nfunction MvchoPage() {\n  const genres = ['장르 전체', '액션', 'SF', '미스터리', '애니메이션', '로맨스', '판타지', '다큐멘터리', '코미디', '공포'];\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체'); // 선택된 장르 상태 추가\n\n  // 선택된 장르에 따라 필터링된 영화 데이터를 생성\n  const filteredMovies = selectedGenre === '장르 전체' ? mockMovies : mockMovies.filter(movie =>\n    movie.genre.split(', ').includes(selectedGenre)\n  );\n\n  // 필터링된 데이터를 사용하여 배너 생성\n  const banners = filteredMovies.map((movie, index) => (\n    <MvBanner\n      key={index}\n      title={movie.title}\n      poster={movie.poster_path}\n      flatrate={movie.flatrate}\n      rating={Math.round(movie.vote_average / 2)}\n    />\n  ));\n\n  return (\n    <div className=\"MvchoPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\"/>\n      <div className=\"mainText\">재미있게 봤거나 눈길이 가는 영화들을 평가해주세요.</div>\n      <div className=\"subText\">찜한 영화들을 바탕으로 MOVIELY가 취향저격 영화들을 추천해 드려요.</div>\n      <div className=\"stickyTop\">\n        <Link to=\"/recommendations\">\n          <button className=\"recommendButton\">영화 추천 받기 &gt;</button>\n        </Link>\n        <div className=\"genreButtons\">\n          {genres.map((genre) => (\n            <button key={genre} className=\"genreButton\" onClick={() => setSelectedGenre(genre)}>{genre}</button>\n          ))}\n        </div>\n      </div>\n      <div className=\"bannerGrid\">\n        {banners.length > 0 ? banners : <div className=\"noMovies\">선택하신 장르의 영화가 없습니다.</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default MvchoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}