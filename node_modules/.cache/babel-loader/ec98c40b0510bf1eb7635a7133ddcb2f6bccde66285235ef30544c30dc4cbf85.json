{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/moviely \\u110B\\u1169\\u1112\\u116E 2.30.27/src/pages/LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/LandingPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LandingPage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('https://43.203.39.119:8080/api/movies?size=1000', {\n          mode: 'cors'\n        }); // HTTPS로 변경\n        const data = await response.json();\n        if (data && data.content) {\n          setMovies(data.content);\n        }\n      } catch (error) {\n        console.error('Failed to fetch movies:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  const getRandomMovies = (movies, num) => {\n    const shuffled = [...movies].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n  const randomMovies = getRandomMovies(movies, 3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: [\"\\uC624\\uB298 \\uBB58 \\uBCFC\\uC9C0 \\uBAA8\\uB974\\uACA0\\uB2E4\\uACE0\\uC694?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 46\n      }, this), \"\\uB0B4 \\uCDE8\\uD5A5\\uC5D0 \\uAF2D \\uB9DE\\uB294 OTT \\uCEE8\\uD150\\uCE20\\uB97C \\uCC3E\\uC544\\uBCF4\\uC138\\uC694!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonContainer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/log-sign\",\n        className: \"button\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-posters\",\n      children: randomMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://image.tmdb.org/t/p/w500${movie.poster_path}`,\n        alt: movie.title,\n        className: `poster poster-${index + 1}`\n      }, movie.movie_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(LandingPage, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","logoImage","jsxDEV","_jsxDEV","LandingPage","_s","movies","setMovies","fetchMovies","response","fetch","mode","data","json","content","error","console","getRandomMovies","num","shuffled","sort","Math","random","slice","randomMovies","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","poster_path","title","movie_id","_c","$RefreshReg$"],"sources":["/Users/autumn/moviely 오후 2.30.27/src/pages/LandingPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/LandingPage.css';\nimport logoImage from '../logo.png';\n\nfunction LandingPage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('https://43.203.39.119:8080/api/movies?size=1000', { mode: 'cors' }); // HTTPS로 변경\n        const data = await response.json();\n        if (data && data.content) {\n          setMovies(data.content);\n        }\n      } catch (error) {\n        console.error('Failed to fetch movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  const getRandomMovies = (movies, num) => {\n    const shuffled = [...movies].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n\n  const randomMovies = getRandomMovies(movies, 3);\n\n  return (\n    <div className=\"container\">\n      <Link to=\"/\">\n        <img src={logoImage} alt=\"Logo\" className=\"logo\" />\n      </Link>\n      <h1 className=\"heading\">오늘 뭘 볼지 모르겠다고요?<br />내 취향에 꼭 맞는 OTT 컨텐츠를 찾아보세요!</h1>\n      <div className=\"buttonContainer\">\n        <Link to=\"/log-sign\" className=\"button\">로그인 및 회원가입</Link>\n      </div>\n      <div className=\"movie-posters\">\n        {randomMovies.map((movie, index) => (\n          <img\n            key={movie.movie_id}\n            src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            className={`poster poster-${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}