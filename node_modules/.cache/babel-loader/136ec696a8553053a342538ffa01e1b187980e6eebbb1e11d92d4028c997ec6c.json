{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/MvsrchPage.css';\nimport logoImage from '../logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvsrchPage() {\n  _s();\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPlatform, setSelectedPlatform] = useState('All');\n  const genres = ['All', 'Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Mystery', 'Romance', 'Sci-Fi', 'TV Movie', 'Thriller', 'War', 'Western'];\n  const platforms = ['All', 'Netflix', 'Disney Plus', 'Watcha', 'Wavve'];\n  const handleSearchClick = () => {\n    navigate('/movie-search', {\n      state: {\n        searchTerm,\n        selectedGenre,\n        selectedPlatform\n      }\n    });\n  };\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n  };\n  const handlePlatformSelect = platform => {\n    setSelectedPlatform(platform);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvsrchPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"myPageButton\",\n      onClick: () => navigate('/my/watched'),\n      children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreContainer\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenreSelect(genre),\n          className: selectedGenre === genre ? \"selectedFilter\" : \"filter\",\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"platformContainer\",\n        children: platforms.map(platform => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePlatformSelect(platform),\n          className: selectedPlatform === platform ? \"selectedFilter\" : \"filter\",\n          children: platform\n        }, platform, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"searchInput\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        onClick: handleSearchClick,\n        children: \"\\uAC80\\uC0C9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(MvsrchPage, \"DN7ompOqRFAIsMOhp4i3l9S3E1E=\", false, function () {\n  return [useNavigate];\n});\n_c = MvsrchPage;\nexport default MvsrchPage;\nvar _c;\n$RefreshReg$(_c, \"MvsrchPage\");","map":{"version":3,"names":["React","useState","useNavigate","logoImage","jsxDEV","_jsxDEV","MvsrchPage","_s","navigate","searchTerm","setSearchTerm","selectedGenre","setSelectedGenre","selectedPlatform","setSelectedPlatform","genres","platforms","handleSearchClick","state","handleGenreSelect","genre","handlePlatformSelect","platform","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/MvsrchPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/MvsrchPage.css';\nimport logoImage from '../logo.png';\n\nfunction MvsrchPage() {\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPlatform, setSelectedPlatform] = useState('All');\n\n  const genres = ['All', 'Action', 'Adventure', 'Animation', 'Comedy', \n    'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', \n    'History', 'Horror', 'Music', 'Mystery', 'Romance', \n    'Sci-Fi', 'TV Movie', 'Thriller', 'War', 'Western'];\n  \n  const platforms = ['All', 'Netflix', 'Disney Plus', 'Watcha', 'Wavve'];\n\n  const handleSearchClick = () => {\n    navigate('/movie-search', { state: { searchTerm, selectedGenre, selectedPlatform } });\n  };\n\n  const handleGenreSelect = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handlePlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n  };\n\n  return (\n    <div className=\"MvsrchPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\"/>\n      <button className=\"myPageButton\" onClick={() => navigate('/my/watched')}>마이페이지</button>\n      <div className=\"filters\">\n        <div className=\"genreContainer\">\n          {genres.map((genre) => (\n            <button key={genre} onClick={() => handleGenreSelect(genre)} className={selectedGenre === genre ? \"selectedFilter\" : \"filter\"}>\n              {genre}\n            </button>\n          ))}\n        </div>\n        <div className=\"platformContainer\">\n          {platforms.map((platform) => (\n            <button key={platform} onClick={() => handlePlatformSelect(platform)} className={selectedPlatform === platform ? \"selectedFilter\" : \"filter\"}>\n              {platform}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"searchContainer\">\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"검색\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button className=\"searchButton\" onClick={handleSearchClick}>\n          검색하기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MvsrchPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,uBAAuB;AAC9B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMc,MAAM,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EACjE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EACpD,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAClD,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,CAAC;EAErD,MAAMC,SAAS,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC;EAEtE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,QAAQ,CAAC,eAAe,EAAE;MAAEU,KAAK,EAAE;QAAET,UAAU;QAAEE,aAAa;QAAEE;MAAiB;IAAE,CAAC,CAAC;EACvF,CAAC;EAED,MAAMM,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,gBAAgB,CAACQ,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCR,mBAAmB,CAACQ,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBnB,OAAA;MAAKoB,GAAG,EAAEtB,SAAU;MAACuB,GAAG,EAAC,MAAM;MAACH,SAAS,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClDzB,OAAA;MAAQkB,SAAS,EAAC,cAAc;MAACQ,OAAO,EAAEA,CAAA,KAAMvB,QAAQ,CAAC,aAAa,CAAE;MAAAgB,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvFzB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBnB,OAAA;QAAKkB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BT,MAAM,CAACiB,GAAG,CAAEZ,KAAK,iBAChBf,OAAA;UAAoB0B,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,KAAK,CAAE;UAACG,SAAS,EAAEZ,aAAa,KAAKS,KAAK,GAAG,gBAAgB,GAAG,QAAS;UAAAI,QAAA,EAC3HJ;QAAK,GADKA,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNzB,OAAA;QAAKkB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BR,SAAS,CAACgB,GAAG,CAAEV,QAAQ,iBACtBjB,OAAA;UAAuB0B,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAACC,QAAQ,CAAE;UAACC,SAAS,EAAEV,gBAAgB,KAAKS,QAAQ,GAAG,gBAAgB,GAAG,QAAS;UAAAE,QAAA,EAC1IF;QAAQ,GADEA,QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnB,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXV,SAAS,EAAC,aAAa;QACvBW,WAAW,EAAC,cAAI;QAChBC,KAAK,EAAE1B,UAAW;QAClB2B,QAAQ,EAAGC,CAAC,IAAK3B,aAAa,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFzB,OAAA;QAAQkB,SAAS,EAAC,cAAc;QAACQ,OAAO,EAAEd,iBAAkB;QAAAO,QAAA,EAAC;MAE7D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA3DQD,UAAU;EAAA,QACAJ,WAAW;AAAA;AAAAqC,EAAA,GADrBjC,UAAU;AA6DnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}