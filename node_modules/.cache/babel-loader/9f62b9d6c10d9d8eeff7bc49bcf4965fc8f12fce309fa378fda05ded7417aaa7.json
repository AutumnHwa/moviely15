{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/RecomPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\nimport Papa from 'papaparse';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport MvBanner from './MvBanner';\nimport '../css/RecomPage.css';\nimport logoImage from '../logo.png';\nimport moviesCSV from '../movie.csv';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genreMapping = {\n  '28': '액션',\n  '12': '모험',\n  '16': '애니메이션',\n  '35': '코미디',\n  '80': '범죄',\n  '99': '다큐멘터리',\n  '18': '드라마',\n  '10751': '가족',\n  '14': '판타지',\n  '36': '역사',\n  '27': '공포',\n  '10402': '음악',\n  '9648': '미스터리',\n  '10749': '로맨스',\n  '878': 'SF',\n  '10770': 'TV 영화',\n  '53': '스릴러',\n  '10752': '전쟁',\n  '37': '서부'\n};\nfunction RecomPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeTab, setActiveTab] = useState('recommendations');\n  const [randomMovies, setRandomMovies] = useState([]);\n  const [topMovie, setTopMovie] = useState(null);\n  const [movieItems, setMovieItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login'); // 사용자 정보가 없으면 로그인 페이지로 리디렉션\n      return;\n    }\n    console.log('Logged in user:', user); // 로그인된 사용자 정보를 콘솔에 출력\n\n    const fetchRecommendations = async () => {\n      try {\n        const response = await fetch('http://43.203.39.119:8080/api/recommend', {\n          method: 'POST',\n          // POST 메서드로 변경\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.userId\n          }) // AuthContext에서 가져온 사용자 ID 사용\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched recommendations:', data); // API 응답 데이터 출력\n\n          if (data.length > 0) {\n            setTopMovie(data[0]);\n            setMovieItems(data.slice(1, 6)); // 필요한 만큼 데이터 슬라이싱\n          }\n        } else {\n          console.error('Failed to fetch recommendations:', response.statusText);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n        setLoading(false);\n      }\n    };\n    fetchRecommendations();\n    Papa.parse(moviesCSV, {\n      download: true,\n      header: true,\n      complete: result => {\n        console.log('Parsed CSV data:', result.data); // CSV 데이터 로그 출력\n        const processedData = result.data.map(movie => ({\n          ...movie,\n          flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n          genre: movie.genre ? movie.genre.split(', ').map(g => genreMapping[g.trim()]).filter(Boolean) : [] // genre 필드 처리 및 매핑\n        }));\n        setRandomMovies(shuffleArray(processedData).slice(0, 10));\n      }\n    });\n  }, [user, navigate]);\n  const shuffleArray = array => {\n    let shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  const handleSearchClick = () => {\n    navigate('/movie-search', {\n      state: {\n        searchTerm\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RecomPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"searchInput\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        onClick: handleSearchClick,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greetingText\",\n      children: \"Autumn\\uB2D8\\uC744 \\uC704\\uD55C \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB97C \\uCC3E\\uC544\\uBD24\\uC5B4\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'recommendations' ? 'tabButton active' : 'tabButton',\n        onClick: () => setActiveTab('recommendations'),\n        children: \"\\uB0B4 \\uCDE8\\uD5A5 \\uC601\\uD654 \\uCD94\\uCC9C\\uBC1B\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'platforms' ? 'tabButton active' : 'tabButton',\n        onClick: () => setActiveTab('platforms'),\n        children: \"\\uB0B4 \\uB9DE\\uCDA4 \\uD50C\\uB7AB\\uD3FC \\uCC3E\\uC544\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabContent\",\n      children: [activeTab === 'recommendations' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topMovieAndListContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topMovieContainer\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading top movie...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this) : topMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"topMovie\",\n              children: /*#__PURE__*/_jsxDEV(MvBanner, {\n                title: topMovie.title,\n                poster: topMovie.poster_path,\n                flatrate: Array.isArray(topMovie.flatrate) ? topMovie.flatrate.join(', ') : topMovie.flatrate,\n                userId: user.userId,\n                movieId: topMovie.movie_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieListContainer\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading movies...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this) : movieItems.map((movie, index) => {\n              const genreList = movie.genre ? movie.genre.split(',').map(g => genreMapping[g.trim()]).filter(Boolean) : [];\n              const posterUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://via.placeholder.com/70x105?text=No+Image';\n              console.log('Movie Data:', movie); // Movie 데이터 로그 출력\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movieItem\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: posterUrl,\n                  alt: movie.title,\n                  className: \"moviePoster\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movieDetails\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movieTitle\",\n                    children: movie.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movieReleaseDate\",\n                    children: new Date(movie.release_date).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movieGenre\",\n                    children: genreList.length ? genreList.join(', ') : 'No Genre'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movieOverview\",\n                    children: movie.overview\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"randomMoviesContainer\",\n          children: /*#__PURE__*/_jsxDEV(Swiper, {\n            spaceBetween: 0,\n            slidesPerView: 4,\n            navigation: true,\n            pagination: {\n              clickable: true\n            },\n            modules: [Navigation, Pagination],\n            children: randomMovies.map((movie, index) => {\n              const posterUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://via.placeholder.com/70x105?text=No+Image';\n              return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    transform: 'scale(0.8)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(MvBanner, {\n                    title: movie.title,\n                    poster: posterUrl,\n                    flatrate: Array.isArray(movie.flatrate) ? movie.flatrate.join(', ') : movie.flatrate,\n                    userId: user.userId,\n                    movieId: movie.movie_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === 'platforms' && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(RecomPage, \"KxUrOmK2y0ZQFZCzvIgIeRxWXHs=\", false, function () {\n  return [useNavigate];\n});\n_c = RecomPage;\nexport default RecomPage;\nvar _c;\n$RefreshReg$(_c, \"RecomPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","AuthContext","Papa","Swiper","SwiperSlide","Navigation","Pagination","MvBanner","logoImage","moviesCSV","jsxDEV","_jsxDEV","Fragment","_Fragment","genreMapping","RecomPage","_s","navigate","user","searchTerm","setSearchTerm","activeTab","setActiveTab","randomMovies","setRandomMovies","topMovie","setTopMovie","movieItems","setMovieItems","loading","setLoading","console","log","fetchRecommendations","response","fetch","method","headers","body","JSON","stringify","user_id","userId","ok","data","json","length","slice","error","statusText","parse","download","header","complete","result","processedData","map","movie","flatrate","split","genre","g","trim","filter","Boolean","shuffleArray","array","shuffled","i","j","Math","floor","random","handleSearchClick","state","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","title","poster","poster_path","Array","isArray","join","movieId","movie_id","index","genreList","posterUrl","Date","release_date","toLocaleDateString","overview","spaceBetween","slidesPerView","navigation","pagination","clickable","modules","style","transform","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/RecomPage.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\nimport Papa from 'papaparse';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport MvBanner from './MvBanner';\nimport '../css/RecomPage.css';\nimport logoImage from '../logo.png';\nimport moviesCSV from '../movie.csv';\n\nconst genreMapping = {\n  '28': '액션',\n  '12': '모험',\n  '16': '애니메이션',\n  '35': '코미디',\n  '80': '범죄',\n  '99': '다큐멘터리',\n  '18': '드라마',\n  '10751': '가족',\n  '14': '판타지',\n  '36': '역사',\n  '27': '공포',\n  '10402': '음악',\n  '9648': '미스터리',\n  '10749': '로맨스',\n  '878': 'SF',\n  '10770': 'TV 영화',\n  '53': '스릴러',\n  '10752': '전쟁',\n  '37': '서부'\n};\n\nfunction RecomPage() {\n  const navigate = useNavigate();\n  const { user } = useContext(AuthContext);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeTab, setActiveTab] = useState('recommendations');\n  const [randomMovies, setRandomMovies] = useState([]);\n  const [topMovie, setTopMovie] = useState(null);\n  const [movieItems, setMovieItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login'); // 사용자 정보가 없으면 로그인 페이지로 리디렉션\n      return;\n    }\n\n    console.log('Logged in user:', user); // 로그인된 사용자 정보를 콘솔에 출력\n\n    const fetchRecommendations = async () => {\n      try {\n        const response = await fetch('http://43.203.39.119:8080/api/recommend', {\n          method: 'POST', // POST 메서드로 변경\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ user_id: user.userId }) // AuthContext에서 가져온 사용자 ID 사용\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched recommendations:', data); // API 응답 데이터 출력\n\n          if (data.length > 0) {\n            setTopMovie(data[0]);\n            setMovieItems(data.slice(1, 6)); // 필요한 만큼 데이터 슬라이싱\n          }\n        } else {\n          console.error('Failed to fetch recommendations:', response.statusText);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchRecommendations();\n\n    Papa.parse(moviesCSV, {\n      download: true,\n      header: true,\n      complete: (result) => {\n        console.log('Parsed CSV data:', result.data); // CSV 데이터 로그 출력\n        const processedData = result.data.map(movie => ({\n          ...movie,\n          flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n          genre: movie.genre ? movie.genre.split(', ').map(g => genreMapping[g.trim()]).filter(Boolean) : [], // genre 필드 처리 및 매핑\n        }));\n        setRandomMovies(shuffleArray(processedData).slice(0, 10));\n      },\n    });\n  }, [user, navigate]);\n\n  const shuffleArray = (array) => {\n    let shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const handleSearchClick = () => {\n    navigate('/movie-search', { state: { searchTerm } });\n  };\n\n  return (\n    <div className=\"RecomPage\">\n      <img src={logoImage} alt=\"Logo\" className=\"logo\" />\n      <div className=\"searchContainer\">\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"검색\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button className=\"searchButton\" onClick={handleSearchClick}>\n          검색\n        </button>\n      </div>\n      <div className=\"greetingText\">Autumn님을 위한 취향저격 영화를 찾아봤어요.</div>\n      <div className=\"tabButtons\">\n        <button\n          className={activeTab === 'recommendations' ? 'tabButton active' : 'tabButton'}\n          onClick={() => setActiveTab('recommendations')}\n        >\n          내 취향 영화 추천받기\n        </button>\n        <button\n          className={activeTab === 'platforms' ? 'tabButton active' : 'tabButton'}\n          onClick={() => setActiveTab('platforms')}\n        >\n          내 맞춤 플랫폼 찾아보기\n        </button>\n      </div>\n      <div className=\"tabContent\">\n        {activeTab === 'recommendations' && (\n          <>\n            <div className=\"topMovieAndListContainer\">\n              <div className=\"topMovieContainer\">\n                {loading ? (\n                  <div>Loading top movie...</div>\n                ) : (\n                  topMovie && (\n                    <div className=\"topMovie\">\n                      <MvBanner\n                        title={topMovie.title}\n                        poster={topMovie.poster_path}\n                        flatrate={Array.isArray(topMovie.flatrate) ? topMovie.flatrate.join(', ') : topMovie.flatrate}\n                        userId={user.userId}\n                        movieId={topMovie.movie_id}\n                      />\n                    </div>\n                  )\n                )}\n              </div>\n              <div className=\"movieListContainer\">\n                {loading ? (\n                  <div>Loading movies...</div>\n                ) : (\n                  movieItems.map((movie, index) => {\n                    const genreList = movie.genre ? movie.genre.split(',').map(g => genreMapping[g.trim()]).filter(Boolean) : [];\n                    const posterUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://via.placeholder.com/70x105?text=No+Image';\n                    console.log('Movie Data:', movie); // Movie 데이터 로그 출력\n                    return (\n                      <div key={index} className=\"movieItem\">\n                        <img\n                          src={posterUrl}\n                          alt={movie.title}\n                          className=\"moviePoster\"\n                        />\n                        <div className=\"movieDetails\">\n                          <div className=\"movieTitle\">{movie.title}</div>\n                          <div className=\"movieReleaseDate\">{new Date(movie.release_date).toLocaleDateString()}</div>\n                          <div className=\"movieGenre\">{genreList.length ? genreList.join(', ') : 'No Genre'}</div>\n                          <div className=\"movieOverview\">{movie.overview}</div>\n                        </div>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            </div>\n            <div className=\"randomMoviesContainer\">\n              <Swiper\n                spaceBetween={0}\n                slidesPerView={4}\n                navigation\n                pagination={{ clickable: true }}\n                modules={[Navigation, Pagination]}\n              >\n                {randomMovies.map((movie, index) => {\n                  const posterUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://via.placeholder.com/70x105?text=No+Image';\n                  return (\n                    <SwiperSlide key={index}>\n                      <div style={{ transform: 'scale(0.8)' }}>\n                        <MvBanner\n                          title={movie.title}\n                          poster={posterUrl}\n                          flatrate={Array.isArray(movie.flatrate) ? movie.flatrate.join(', ') : movie.flatrate}\n                          userId={user.userId}\n                          movieId={movie.movie_id}\n                        />\n                      </div>\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n            </div>\n          </>\n        )}\n        {activeTab === 'platforms' && (\n          <div>\n            {/* 플랫폼 관련 컨텐츠 */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RecomPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}