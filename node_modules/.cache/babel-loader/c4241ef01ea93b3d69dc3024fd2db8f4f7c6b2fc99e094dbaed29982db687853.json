{"ast":null,"code":"import React,{useState,useEffect,useMemo,useCallback}from'react';import{Link}from'react-router-dom';import MvBanner from'./MvBanner';import'../css/MvsrchPage.css';import logoImage from'../logo.png';import watchaLogo from'../watcha.png';import netflixLogo from'../netflix.png';import disneyPlusLogo from'../disneyplus.png';import wavveLogo from'../wavve.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MvsrchPage(_ref){let{userId}=_ref;// userId를 props로 받음\nconst genreMapping=useMemo(()=>({'장르 전체':'All','액션':'28','모험':'12','애니메이션':'16','코미디':'35','범죄':'80','다큐멘터리':'99','드라마':'18','가족':'10751','판타지':'14','역사':'36','공포':'27','음악':'10402','미스터리':'9648','로맨스':'10749','SF':'878','TV 영화':'10770','스릴러':'53','전쟁':'10752','서부':'37'}),[]);const platformMapping=useMemo(()=>({'전체':'All','넷플릭스':'Netflix','디즈니플러스':'Disney Plus','왓챠':'Watcha','웨이브':'Wavve'}),[]);const platforms=useMemo(()=>[{name:'전체',logo:null},{name:'넷플릭스',logo:netflixLogo},{name:'디즈니플러스',logo:disneyPlusLogo},{name:'왓챠',logo:watchaLogo},{name:'웨이브',logo:wavveLogo}],[]);const genres=useMemo(()=>Object.keys(genreMapping),[genreMapping]);const[selectedGenre,setSelectedGenre]=useState('장르 전체');const[selectedPlatform,setSelectedPlatform]=useState('전체');const[movies,setMovies]=useState([]);const[filteredMovies,setFilteredMovies]=useState([]);const[loading,setLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[showPlatforms,setShowPlatforms]=useState(false);const[showGenres,setShowGenres]=useState(false);useEffect(()=>{const fetchMovies=async()=>{try{console.log('Fetching movies...');const response=await fetch('http://43.203.39.119:8080/api/movies?size=1000',{mode:'cors'});console.log('API 요청 성공:',response);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();console.log('API 응답 데이터:',data);if(data&&data.content){const processedData=data.content.map(movie=>({...movie,flatrate:movie.flatrate?movie.flatrate.split(', ').map(platform=>platform.toLowerCase()):[],genre:movie.genre?movie.genre.split(', '):[]}));setMovies(processedData);setFilteredMovies(processedData);setLoading(false);console.log('Processed Data:',processedData);}else{console.error('Unexpected response format:',data);setLoading(false);}}catch(error){console.error('Error fetching movies:',error);setLoading(false);}};fetchMovies();},[userId]);const filterMovies=useCallback(()=>{let filtered=[...movies];if(selectedPlatform!=='전체'){const selectedPlatformInEnglish=platformMapping[selectedPlatform].toLowerCase();console.log(\"Selected Platform in English: \".concat(selectedPlatformInEnglish));filtered=filtered.filter(movie=>{console.log(\"Movie Platforms: \".concat(movie.flatrate));return movie.flatrate.includes(selectedPlatformInEnglish);});}if(selectedGenre!=='장르 전체'){filtered=filtered.filter(movie=>movie.genre.includes(genreMapping[selectedGenre]));}if(searchTerm){const terms=searchTerm.split(' ').filter(term=>term);const regex=new RegExp(terms.join('|'),'i');filtered=filtered.filter(movie=>regex.test(movie.title));}return filtered;},[movies,selectedPlatform,selectedGenre,searchTerm,genreMapping,platformMapping]);useEffect(()=>{setFilteredMovies(filterMovies());},[filterMovies]);const handleSearchClick=()=>{setFilteredMovies(filterMovies());};const handleGenreClick=genre=>{setSelectedGenre(genre);setShowGenres(false);};const handlePlatformClick=platform=>{setSelectedPlatform(platform);setShowPlatforms(false);};let resultText='';if(selectedPlatform!=='전체'){resultText+=\"\\uD50C\\uB7AB\\uD3FC : <span style=\\\"color: yellow;\\\">\".concat(selectedPlatform,\"</span>\");}if(selectedGenre!=='장르 전체'){if(resultText){resultText+=', ';}resultText+=\"\\uC7A5\\uB974 : <span style=\\\"color: yellow;\\\">\".concat(selectedGenre,\"</span>\");}if(resultText){resultText+=' 검색 결과입니다.';}return/*#__PURE__*/_jsxs(\"div\",{className:\"MvsrchPage\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"searchContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dropdownContainer\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPlatforms(!showPlatforms),className:\"platformButton\",children:\"\\uD50C\\uB7AB\\uD3FC\\u3164\\u3164\\u3164\\u25BC\"}),showPlatforms&&/*#__PURE__*/_jsx(\"div\",{className:\"platformDropdown\",children:platforms.map(platform=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handlePlatformClick(platform.name),className:\"filter\",children:[platform.logo&&/*#__PURE__*/_jsx(\"img\",{src:platform.logo,alt:platform.name,className:\"logoIcon\"}),platform.name]},platform.name))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdownContainer\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowGenres(!showGenres),className:\"genreButton\",children:\"\\uC7A5\\uB974\\u3164\\u3164\\u3164\\u3164\\u25BC\"}),showGenres&&/*#__PURE__*/_jsx(\"div\",{className:\"genreDropdown\",children:genres.map(genre=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleGenreClick(genre),className:\"filter\",children:genre},genre))})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"searchInput\",placeholder:\"\\uAC80\\uC0C9\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),onKeyDown:e=>e.key==='Enter'&&handleSearchClick()}),/*#__PURE__*/_jsx(\"button\",{className:\"searchButton\",onClick:handleSearchClick,children:\"\\uAC80\\uC0C9\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"resultText\",style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:resultText}})}),/*#__PURE__*/_jsx(\"div\",{className:\"movieResults\",style:{marginTop:'30px'},children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):filteredMovies.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"movieGrid\",children:filteredMovies.map((movie,index)=>/*#__PURE__*/_jsx(MvBanner,{title:movie.title,poster:movie.poster_path,flatrate:movie.flatrate.join(', '),rating:Math.round(movie.vote_average/2),movieId:movie.id// 영화 ID 전달\n,userId:userId// 사용자 ID 전달\n},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"noMovies\",children:\"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]});}export default MvsrchPage;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Link","MvBanner","logoImage","watchaLogo","netflixLogo","disneyPlusLogo","wavveLogo","jsx","_jsx","jsxs","_jsxs","MvsrchPage","_ref","userId","genreMapping","platformMapping","platforms","name","logo","genres","Object","keys","selectedGenre","setSelectedGenre","selectedPlatform","setSelectedPlatform","movies","setMovies","filteredMovies","setFilteredMovies","loading","setLoading","searchTerm","setSearchTerm","showPlatforms","setShowPlatforms","showGenres","setShowGenres","fetchMovies","console","log","response","fetch","mode","ok","Error","concat","status","data","json","content","processedData","map","movie","flatrate","split","platform","toLowerCase","genre","error","filterMovies","filtered","selectedPlatformInEnglish","filter","includes","terms","term","regex","RegExp","join","test","title","handleSearchClick","handleGenreClick","handlePlatformClick","resultText","className","children","to","src","alt","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","style","marginTop","dangerouslySetInnerHTML","__html","length","index","poster","poster_path","rating","Math","round","vote_average","movieId","id"],"sources":["/Users/autumn/Library/Mobile Documents/com~apple~CloudDocs/.Trash/moviely/src/pages/MvsrchPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvsrchPage.css';\nimport logoImage from '../logo.png';\nimport watchaLogo from '../watcha.png';\nimport netflixLogo from '../netflix.png';\nimport disneyPlusLogo from '../disneyplus.png';\nimport wavveLogo from '../wavve.png';\n\nfunction MvsrchPage({ userId }) { // userId를 props로 받음\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []);\n\n  const platformMapping = useMemo(() => ({\n    '전체': 'All',\n    '넷플릭스': 'Netflix',\n    '디즈니플러스': 'Disney Plus',\n    '왓챠': 'Watcha',\n    '웨이브': 'Wavve'\n  }), []);\n\n  const platforms = useMemo(() => [\n    { name: '전체', logo: null },\n    { name: '넷플릭스', logo: netflixLogo },\n    { name: '디즈니플러스', logo: disneyPlusLogo },\n    { name: '왓챠', logo: watchaLogo },\n    { name: '웨이브', logo: wavveLogo }\n  ], []);\n\n  const genres = useMemo(() => Object.keys(genreMapping), [genreMapping]);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [selectedPlatform, setSelectedPlatform] = useState('전체');\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showPlatforms, setShowPlatforms] = useState(false);\n  const [showGenres, setShowGenres] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        console.log('Fetching movies...');\n        const response = await fetch('http://43.203.39.119:8080/api/movies?size=1000', { mode: 'cors' });\n        console.log('API 요청 성공:', response);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API 응답 데이터:', data);\n\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ').map(platform => platform.toLowerCase()) : [],\n            genre: movie.genre ? movie.genre.split(', ') : []\n          }));\n          setMovies(processedData);\n          setFilteredMovies(processedData);\n          setLoading(false);\n          console.log('Processed Data:', processedData);\n        } else {\n          console.error('Unexpected response format:', data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [userId]);\n\n  const filterMovies = useCallback(() => {\n    let filtered = [...movies];\n\n    if (selectedPlatform !== '전체') {\n      const selectedPlatformInEnglish = platformMapping[selectedPlatform].toLowerCase();\n      console.log(`Selected Platform in English: ${selectedPlatformInEnglish}`);\n      filtered = filtered.filter(movie => {\n        console.log(`Movie Platforms: ${movie.flatrate}`);\n        return movie.flatrate.includes(selectedPlatformInEnglish);\n      });\n    }\n\n    if (selectedGenre !== '장르 전체') {\n      filtered = filtered.filter(movie => movie.genre.includes(genreMapping[selectedGenre]));\n    }\n\n    if (searchTerm) {\n      const terms = searchTerm.split(' ').filter(term => term);\n      const regex = new RegExp(terms.join('|'), 'i');\n      filtered = filtered.filter(movie => regex.test(movie.title));\n    }\n\n    return filtered;\n  }, [movies, selectedPlatform, selectedGenre, searchTerm, genreMapping, platformMapping]);\n\n  useEffect(() => {\n    setFilteredMovies(filterMovies());\n  }, [filterMovies]);\n\n  const handleSearchClick = () => {\n    setFilteredMovies(filterMovies());\n  };\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n    setShowGenres(false);\n  };\n\n  const handlePlatformClick = (platform) => {\n    setSelectedPlatform(platform);\n    setShowPlatforms(false);\n  };\n\n  let resultText = '';\n  if (selectedPlatform !== '전체') {\n    resultText += `플랫폼 : <span style=\"color: yellow;\">${selectedPlatform}</span>`;\n  }\n  if (selectedGenre !== '장르 전체') {\n    if (resultText) {\n      resultText += ', ';\n    }\n    resultText += `장르 : <span style=\"color: yellow;\">${selectedGenre}</span>`;\n  }\n  if (resultText) {\n    resultText += ' 검색 결과입니다.';\n  }\n\n  return (\n    <div className=\"MvsrchPage\">\n      <Link to=\"/\" className=\"logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"searchContainer\">\n        <div className=\"dropdownContainer\">\n          <button onClick={() => setShowPlatforms(!showPlatforms)} className=\"platformButton\">플랫폼ㅤㅤㅤ▼</button>\n          {showPlatforms && (\n            <div className=\"platformDropdown\">\n              {platforms.map((platform) => (\n                <button\n                  key={platform.name}\n                  onClick={() => handlePlatformClick(platform.name)}\n                  className=\"filter\"\n                >\n                  {platform.logo && <img src={platform.logo} alt={platform.name} className=\"logoIcon\"/>}\n                  {platform.name}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"dropdownContainer\">\n          <button onClick={() => setShowGenres(!showGenres)} className=\"genreButton\">장르ㅤㅤㅤㅤ▼</button>\n          {showGenres && (\n            <div className=\"genreDropdown\">\n              {genres.map((genre) => (\n                <button\n                  key={genre}\n                  onClick={() => handleGenreClick(genre)}\n                  className=\"filter\"\n                >\n                  {genre}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"검색\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && handleSearchClick()} \n        />\n        <button className=\"searchButton\" onClick={handleSearchClick}>검색</button>\n      </div>\n      <div className=\"resultText\" style={{ marginTop: '20px' }}>\n        <span dangerouslySetInnerHTML={{ __html: resultText }} />\n      </div>\n      <div className=\"movieResults\" style={{ marginTop: '30px' }}>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          filteredMovies.length > 0 ? (\n            <div className=\"movieGrid\">\n              {filteredMovies.map((movie, index) => (\n                <MvBanner\n                  key={index}\n                  title={movie.title}\n                  poster={movie.poster_path}\n                  flatrate={movie.flatrate.join(', ')}\n                  rating={Math.round(movie.vote_average / 2)}\n                  movieId={movie.id} // 영화 ID 전달\n                  userId={userId} // 사용자 ID 전달\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"noMovies\">검색 결과가 없습니다.</div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MvsrchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}