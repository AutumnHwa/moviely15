{"ast":null,"code":"import React,{createContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const UserContext=/*#__PURE__*/createContext();export const UserProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const login=userData=>{setUser(userData);localStorage.setItem('user',JSON.stringify(userData));};const logout=()=>{setUser(null);localStorage.removeItem('user');};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","UserContext","UserProvider","_ref","children","user","setUser","login","userData","localStorage","setItem","JSON","stringify","logout","removeItem","Provider","value"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/UserContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <UserContext.Provider value={{ user, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,MAAO,MAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAK,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAEtC,KAAM,CAAAS,KAAK,CAAIC,QAAQ,EAAK,CAC1BF,OAAO,CAACE,QAAQ,CAAC,CACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC,CACxD,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACnBP,OAAO,CAAC,IAAI,CAAC,CACbG,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,mBACEd,IAAA,CAACC,WAAW,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAEX,IAAI,CAAEE,KAAK,CAAEM,MAAO,CAAE,CAAAT,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}