{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,Link}from'react-router-dom';import Papa from'papaparse';import{Swiper,SwiperSlide}from'swiper/react';import'swiper/css';import'swiper/css/navigation';import'swiper/css/pagination';import{Navigation,Pagination}from'swiper/modules';import MvBanner from'./MvBanner';import'../css/RecomPage.css';import logoImage from'../logo.png';import moviesCSV from'../movie.csv';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const genreMapping={'28':'액션','12':'모험','16':'애니메이션','35':'코미디','80':'범죄','99':'다큐멘터리','18':'드라마','10751':'가족','14':'판타지','36':'역사','27':'공포','10402':'음악','9648':'미스터리','10749':'로맨스','878':'SF','10770':'TV 영화','53':'스릴러','10752':'전쟁','37':'서부'};function RecomPage(){const navigate=useNavigate();const[searchTerm,setSearchTerm]=useState('');const[activeTab,setActiveTab]=useState('recommendations');const[randomMovies,setRandomMovies]=useState([]);const[topMovie,setTopMovie]=useState(null);const[movieItems,setMovieItems]=useState([]);const[loading,setLoading]=useState(true);const userId=1;// 하드코딩된 사용자 ID\nuseEffect(()=>{const fetchRecommendations=async()=>{try{const response=await fetch('http://43.203.39.119:8080/api/recommend',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:userId})});if(response.ok){const data=await response.json();console.log('Fetched recommendations:',data);data.forEach((movie,index)=>{console.log(\"Movie \".concat(index,\":\"),movie);});if(data.length>0){setTopMovie(data[0]);setMovieItems(data.slice(1,6));}}else{console.error('Failed to fetch recommendations:',response.statusText);}setLoading(false);}catch(error){console.error('Error fetching recommendations:',error);setLoading(false);}};fetchRecommendations();Papa.parse(moviesCSV,{download:true,header:true,complete:result=>{console.log('Parsed CSV data:',result.data);const processedData=result.data.map(movie=>({...movie,flatrate:movie.flatrate?movie.flatrate.split(', '):[],genre:movie.genre?movie.genre.split(', ').map(g=>genreMapping[g.trim()]).filter(Boolean):[]// genre 필드 처리 및 매핑\n}));setRandomMovies(shuffleArray(processedData).slice(0,10));}});},[userId]);const shuffleArray=array=>{let shuffled=array.slice();for(let i=shuffled.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[shuffled[i],shuffled[j]]=[shuffled[j],shuffled[i]];}return shuffled;};const handleSearchClick=()=>{navigate('/movie-search',{state:{searchTerm}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"RecomPage\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"searchContainer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"searchInput\",placeholder:\"\\uAC80\\uC0C9\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"searchButton\",onClick:handleSearchClick,children:\"\\uAC80\\uC0C9\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"greetingText\",children:\"Autumn\\uB2D8\\uC744 \\uC704\\uD55C \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB97C \\uCC3E\\uC544\\uBD24\\uC5B4\\uC694.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabButtons\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab==='recommendations'?'tabButton active':'tabButton',onClick:()=>setActiveTab('recommendations'),children:\"\\uB0B4 \\uCDE8\\uD5A5 \\uC601\\uD654 \\uCD94\\uCC9C\\uBC1B\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='platforms'?'tabButton active':'tabButton',onClick:()=>setActiveTab('platforms'),children:\"\\uB0B4 \\uB9DE\\uCDA4 \\uD50C\\uB7AB\\uD3FC \\uCC3E\\uC544\\uBCF4\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabContent\",children:[activeTab==='recommendations'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"topMovieAndListContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"topMovieContainer\",children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading top movie...\"}):topMovie&&/*#__PURE__*/_jsx(\"div\",{className:\"topMovie\",children:/*#__PURE__*/_jsx(MvBanner,{title:topMovie.title,poster:topMovie.poster_path,flatrate:Array.isArray(topMovie.flatrate)?topMovie.flatrate.join(', '):topMovie.flatrate,userId:userId// 사용자 ID 전달\n,movieId:topMovie.movie_id// 영화 ID 전달\n})})}),/*#__PURE__*/_jsx(\"div\",{className:\"movieListContainer\",children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading movies...\"}):movieItems.map((movie,index)=>{const genreList=movie.genre?movie.genre.split(',').map(g=>genreMapping[g.trim()]).filter(Boolean):[];const posterUrl=movie.poster_path?\"http://image.tmdb.org/t/p/w500\".concat(movie.poster_path):'https://via.placeholder.com/70x105?text=No+Image';console.log('Movie Data:',movie);// Movie 데이터 로그 출력\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"movieItem\",children:[/*#__PURE__*/_jsx(\"img\",{src:posterUrl,alt:movie.title,className:\"moviePoster\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"movieDetails\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"movieTitle\",children:movie.title}),/*#__PURE__*/_jsx(\"div\",{className:\"movieReleaseDate\",children:new Date(movie.release_date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"div\",{className:\"movieGenre\",children:genreList.length?genreList.join(', '):'No Genre'}),/*#__PURE__*/_jsx(\"div\",{className:\"movieOverview\",children:movie.overview})]})]},index);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"randomMoviesContainer\",children:/*#__PURE__*/_jsx(Swiper,{spaceBetween:0,slidesPerView:4,navigation:true,pagination:{clickable:true},modules:[Navigation,Pagination],children:randomMovies.map((movie,index)=>{const posterUrl=movie.poster_path?\"http://image.tmdb.org/t/p/w500\".concat(movie.poster_path):'https://via.placeholder.com/70x105?text=No+Image';return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(\"div\",{style:{transform:'scale(0.8)'},children:/*#__PURE__*/_jsx(MvBanner,{title:movie.title,poster:posterUrl,flatrate:Array.isArray(movie.flatrate)?movie.flatrate.join(', '):movie.flatrate,userId:userId// 사용자 ID 전달\n,movieId:movie.movie_id// 영화 ID 전달\n})})},index);})})})]}),activeTab==='platforms'&&/*#__PURE__*/_jsx(\"div\",{})]})]});}export default RecomPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","Papa","Swiper","SwiperSlide","Navigation","Pagination","MvBanner","logoImage","moviesCSV","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","genreMapping","RecomPage","navigate","searchTerm","setSearchTerm","activeTab","setActiveTab","randomMovies","setRandomMovies","topMovie","setTopMovie","movieItems","setMovieItems","loading","setLoading","userId","fetchRecommendations","response","fetch","method","headers","body","JSON","stringify","user_id","ok","data","json","console","log","forEach","movie","index","concat","length","slice","error","statusText","parse","download","header","complete","result","processedData","map","flatrate","split","genre","g","trim","filter","Boolean","shuffleArray","array","shuffled","i","j","Math","floor","random","handleSearchClick","state","className","children","to","src","alt","type","placeholder","value","onChange","e","target","onClick","title","poster","poster_path","Array","isArray","join","movieId","movie_id","genreList","posterUrl","Date","release_date","toLocaleDateString","overview","spaceBetween","slidesPerView","navigation","pagination","clickable","modules","style","transform"],"sources":["/Users/autumn/moviely 오후 2.30.27/src/pages/RecomPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Papa from 'papaparse';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport MvBanner from './MvBanner';\nimport '../css/RecomPage.css';\nimport logoImage from '../logo.png';\nimport moviesCSV from '../movie.csv';\n\nconst genreMapping = {\n  '28': '액션',\n  '12': '모험',\n  '16': '애니메이션',\n  '35': '코미디',\n  '80': '범죄',\n  '99': '다큐멘터리',\n  '18': '드라마',\n  '10751': '가족',\n  '14': '판타지',\n  '36': '역사',\n  '27': '공포',\n  '10402': '음악',\n  '9648': '미스터리',\n  '10749': '로맨스',\n  '878': 'SF',\n  '10770': 'TV 영화',\n  '53': '스릴러',\n  '10752': '전쟁',\n  '37': '서부'\n};\n\nfunction RecomPage() {\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeTab, setActiveTab] = useState('recommendations');\n  const [randomMovies, setRandomMovies] = useState([]);\n  const [topMovie, setTopMovie] = useState(null);\n  const [movieItems, setMovieItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const userId = 1; // 하드코딩된 사용자 ID\n\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      try {\n        const response = await fetch('http://43.203.39.119:8080/api/recommend', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ user_id: userId }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched recommendations:', data);\n\n          data.forEach((movie, index) => {\n            console.log(`Movie ${index}:`, movie);\n          });\n\n          if (data.length > 0) {\n            setTopMovie(data[0]);\n            setMovieItems(data.slice(1, 6));\n          }\n        } else {\n          console.error('Failed to fetch recommendations:', response.statusText);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchRecommendations();\n\n    Papa.parse(moviesCSV, {\n      download: true,\n      header: true,\n      complete: (result) => {\n        console.log('Parsed CSV data:', result.data);\n        const processedData = result.data.map(movie => ({\n          ...movie,\n          flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n          genre: movie.genre ? movie.genre.split(', ').map(g => genreMapping[g.trim()]).filter(Boolean) : [], // genre 필드 처리 및 매핑\n        }));\n        setRandomMovies(shuffleArray(processedData).slice(0, 10));\n      },\n    });\n  }, [userId]);\n\n  const shuffleArray = (array) => {\n    let shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const handleSearchClick = () => {\n    navigate('/movie-search', { state: { searchTerm } });\n  };\n\n  return (\n    <div className=\"RecomPage\">\n      <Link to=\"/\" className=\"logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"searchContainer\">\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"검색\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button className=\"searchButton\" onClick={handleSearchClick}>\n          검색\n        </button>\n      </div>\n      <div className=\"greetingText\">Autumn님을 위한 취향저격 영화를 찾아봤어요.</div>\n      <div className=\"tabButtons\">\n        <button\n          className={activeTab === 'recommendations' ? 'tabButton active' : 'tabButton'}\n          onClick={() => setActiveTab('recommendations')}\n        >\n          내 취향 영화 추천받기\n        </button>\n        <button\n          className={activeTab === 'platforms' ? 'tabButton active' : 'tabButton'}\n          onClick={() => setActiveTab('platforms')}\n        >\n          내 맞춤 플랫폼 찾아보기\n        </button>\n      </div>\n      <div className=\"tabContent\">\n        {activeTab === 'recommendations' && (\n          <>\n            <div className=\"topMovieAndListContainer\">\n              <div className=\"topMovieContainer\">\n                {loading ? (\n                  <div>Loading top movie...</div>\n                ) : (\n                  topMovie && (\n                    <div className=\"topMovie\">\n                      <MvBanner\n                        title={topMovie.title}\n                        poster={topMovie.poster_path}\n                        flatrate={Array.isArray(topMovie.flatrate) ? topMovie.flatrate.join(', ') : topMovie.flatrate}\n                        userId={userId} // 사용자 ID 전달\n                        movieId={topMovie.movie_id} // 영화 ID 전달\n                      />\n                    </div>\n                  )\n                )}\n              </div>\n              <div className=\"movieListContainer\">\n                {loading ? (\n                  <div>Loading movies...</div>\n                ) : (\n                  movieItems.map((movie, index) => {\n                    const genreList = movie.genre ? movie.genre.split(',').map(g => genreMapping[g.trim()]).filter(Boolean) : [];\n                    const posterUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://via.placeholder.com/70x105?text=No+Image';\n                    console.log('Movie Data:', movie); // Movie 데이터 로그 출력\n                    return (\n                      <div key={index} className=\"movieItem\">\n                        <img\n                          src={posterUrl}\n                          alt={movie.title}\n                          className=\"moviePoster\"\n                        />\n                        <div className=\"movieDetails\">\n                          <div className=\"movieTitle\">{movie.title}</div>\n                          <div className=\"movieReleaseDate\">{new Date(movie.release_date).toLocaleDateString()}</div>\n                          <div className=\"movieGenre\">{genreList.length ? genreList.join(', ') : 'No Genre'}</div>\n                          <div className=\"movieOverview\">{movie.overview}</div>\n                        </div>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            </div>\n            <div className=\"randomMoviesContainer\">\n              <Swiper\n                spaceBetween={0}\n                slidesPerView={4}\n                navigation\n                pagination={{ clickable: true }}\n                modules={[Navigation, Pagination]}\n              >\n                {randomMovies.map((movie, index) => {\n                  const posterUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://via.placeholder.com/70x105?text=No+Image';\n                  return (\n                    <SwiperSlide key={index}>\n                      <div style={{ transform: 'scale(0.8)' }}>\n                        <MvBanner\n                          title={movie.title}\n                          poster={posterUrl}\n                          flatrate={Array.isArray(movie.flatrate) ? movie.flatrate.join(', ') : movie.flatrate}\n                          userId={userId} // 사용자 ID 전달\n                          movieId={movie.movie_id} // 영화 ID 전달\n                        />\n                      </div>\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n            </div>\n          </>\n        )}\n        {activeTab === 'platforms' && (\n          <div>\n            {/* 플랫폼 관련 컨텐츠 */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RecomPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}