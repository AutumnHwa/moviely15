{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Desktop/moviely/moviely/src/pages/LogSignPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../css/LogSignPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '13094654813-nqglekemv1iff66rsq4luqftbfgv51hi.apps.googleusercontent.com';\nfunction LogSignPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const [gapiLoaded, setGapiLoaded] = useState(false);\n  useEffect(() => {\n    const loadGapi = () => {\n      const {\n        gapi\n      } = window;\n      gapi.load('auth2', () => {\n        gapi.auth2.init({\n          client_id: CLIENT_ID,\n          redirect_uri: 'https://moviely.duckdns.org/login/oauth2/code/google'\n        }).then(() => {\n          setGapiLoaded(true);\n        });\n      });\n    };\n    if (window.gapi) {\n      loadGapi();\n    } else {\n      window.addEventListener('load', loadGapi);\n      return () => window.removeEventListener('load', loadGapi);\n    }\n  }, []);\n  const handleGoogleLogin = () => {\n    if (!gapiLoaded) {\n      alert('Google API is not loaded yet. Please try again.');\n      return;\n    }\n    const {\n      gapi\n    } = window;\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.grantOfflineAccess().then(async response => {\n      const {\n        code\n      } = response;\n      try {\n        const res = await fetch('https://moviely.duckdns.org/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            code\n          }) // 인증 코드를 요청 본문에 포함\n        });\n        const data = await res.json();\n        if (data.token) {\n          login(data.token, data.user);\n          if (data.isNewUser) {\n            navigate('/add');\n          } else {\n            navigate('/movie-select');\n          }\n        } else {\n          alert('로그인에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('Backend redirection failed:', error);\n        alert('백엔드 처리에 실패했습니다.');\n      }\n    }).catch(error => {\n      console.error('Google Login Failed:', error);\n      alert('Google 로그인에 실패했습니다.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logSignPage\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logSign-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logSignBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC18C\\uC15C \\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\\uC73C\\uB85C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this), \"MOVIELY\\uC758 \\uBAA8\\uB4E0 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC774\\uC6A9\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"googleLoginButton\",\n        onClick: handleGoogleLogin,\n        children: \"Google\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(LogSignPage, \"o2ZQy4zbjcV/l2KnFW5Uj73+2U0=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LogSignPage;\nexport default LogSignPage;\nvar _c;\n$RefreshReg$(_c, \"LogSignPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","logoImage","useAuth","jsxDEV","_jsxDEV","CLIENT_ID","LogSignPage","_s","navigate","login","gapiLoaded","setGapiLoaded","loadGapi","gapi","window","load","auth2","init","client_id","redirect_uri","then","addEventListener","removeEventListener","handleGoogleLogin","alert","getAuthInstance","grantOfflineAccess","response","code","res","fetch","method","headers","body","JSON","stringify","data","json","token","user","isNewUser","error","console","catch","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/pages/LogSignPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../css/LogSignPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext';\n\nconst CLIENT_ID = '13094654813-nqglekemv1iff66rsq4luqftbfgv51hi.apps.googleusercontent.com';\n\nfunction LogSignPage() {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [gapiLoaded, setGapiLoaded] = useState(false);\n\n  useEffect(() => {\n    const loadGapi = () => {\n      const { gapi } = window;\n      gapi.load('auth2', () => {\n        gapi.auth2.init({\n          client_id: CLIENT_ID,\n          redirect_uri: 'https://moviely.duckdns.org/login/oauth2/code/google'\n        }).then(() => {\n          setGapiLoaded(true);\n        });\n      });\n    };\n\n    if (window.gapi) {\n      loadGapi();\n    } else {\n      window.addEventListener('load', loadGapi);\n      return () => window.removeEventListener('load', loadGapi);\n    }\n  }, []);\n\n  const handleGoogleLogin = () => {\n    if (!gapiLoaded) {\n      alert('Google API is not loaded yet. Please try again.');\n      return;\n    }\n\n    const { gapi } = window;\n    const auth2 = gapi.auth2.getAuthInstance();\n\n    auth2.grantOfflineAccess().then(async (response) => {\n      const { code } = response;\n\n      try {\n        const res = await fetch('https://moviely.duckdns.org/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ code }), // 인증 코드를 요청 본문에 포함\n        });\n        const data = await res.json();\n\n        if (data.token) {\n          login(data.token, data.user);\n          if (data.isNewUser) {\n            navigate('/add');\n          } else {\n            navigate('/movie-select');\n          }\n        } else {\n          alert('로그인에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('Backend redirection failed:', error);\n        alert('백엔드 처리에 실패했습니다.');\n      }\n    }).catch((error) => {\n      console.error('Google Login Failed:', error);\n      alert('Google 로그인에 실패했습니다.');\n    });\n  };\n\n  return (\n    <div className=\"logSignPage\">\n      <Link to=\"/\" className=\"logSign-logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"logSignBox\">\n        <h2>로그인 및 회원가입</h2>\n        <p>소셜 로그인 및 회원가입으로<br />MOVIELY의 모든 서비스를 이용하실 수 있습니다.</p>\n        <button className=\"googleLoginButton\" onClick={handleGoogleLogin}>\n          Google로 시작하기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default LogSignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}