{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[authToken,setAuthToken]=useState(()=>sessionStorage.getItem('authToken')||null);const[user,setUser]=useState(()=>JSON.parse(sessionStorage.getItem('user'))||null);const navigate=useNavigate();useEffect(()=>{if(authToken){sessionStorage.setItem('authToken',authToken);sessionStorage.setItem('user',JSON.stringify(user));}else{sessionStorage.removeItem('authToken');sessionStorage.removeItem('user');}},[authToken,user]);const login=(token,userInfo)=>{setAuthToken(token);setUser(userInfo);};const logout=()=>{setAuthToken(null);setUser(null);navigate('/log-sign');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{authToken,user,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsx","_jsx","AuthContext","AuthProvider","_ref","children","authToken","setAuthToken","sessionStorage","getItem","user","setUser","JSON","parse","navigate","setItem","stringify","removeItem","login","token","userInfo","logout","Provider","value","useAuth"],"sources":["/Users/autumn/Desktop/moviely/moviely/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [authToken, setAuthToken] = useState(() => sessionStorage.getItem('authToken') || null);\n  const [user, setUser] = useState(() => JSON.parse(sessionStorage.getItem('user')) || null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (authToken) {\n      sessionStorage.setItem('authToken', authToken);\n      sessionStorage.setItem('user', JSON.stringify(user));\n    } else {\n      sessionStorage.removeItem('authToken');\n      sessionStorage.removeItem('user');\n    }\n  }, [authToken, user]);\n\n  const login = (token, userInfo) => {\n    setAuthToken(token);\n    setUser(userInfo);\n  };\n\n  const logout = () => {\n    setAuthToken(null);\n    setUser(null);\n    navigate('/log-sign');\n  };\n\n  return (\n    <AuthContext.Provider value={{ authToken, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,IAAMW,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,EAAI,IAAI,CAAC,CAC7F,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,IAAMe,IAAI,CAACC,KAAK,CAACL,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAI,IAAI,CAAC,CAC1F,KAAM,CAAAK,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,GAAIQ,SAAS,CAAE,CACbE,cAAc,CAACO,OAAO,CAAC,WAAW,CAAET,SAAS,CAAC,CAC9CE,cAAc,CAACO,OAAO,CAAC,MAAM,CAAEH,IAAI,CAACI,SAAS,CAACN,IAAI,CAAC,CAAC,CACtD,CAAC,IAAM,CACLF,cAAc,CAACS,UAAU,CAAC,WAAW,CAAC,CACtCT,cAAc,CAACS,UAAU,CAAC,MAAM,CAAC,CACnC,CACF,CAAC,CAAE,CAACX,SAAS,CAAEI,IAAI,CAAC,CAAC,CAErB,KAAM,CAAAQ,KAAK,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CACjCb,YAAY,CAACY,KAAK,CAAC,CACnBR,OAAO,CAACS,QAAQ,CAAC,CACnB,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBd,YAAY,CAAC,IAAI,CAAC,CAClBI,OAAO,CAAC,IAAI,CAAC,CACbG,QAAQ,CAAC,WAAW,CAAC,CACvB,CAAC,CAED,mBACEb,IAAA,CAACC,WAAW,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,SAAS,CAAEI,IAAI,CAAEQ,KAAK,CAAEG,MAAO,CAAE,CAAAhB,QAAA,CAC7DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAmB,OAAO,CAAGA,CAAA,GAAM5B,UAAU,CAACM,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}